{"version":3,"sources":["directives.js","filters.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"dependencies.js","sourcesContent":["Vue.directive('selectize', {\n    twoWay: true,\n    bind: function () {\n        $(this.el).selectize({\n                sortField: 'text',\n                placeholder: 'Type to select...'\n            })\n            .on(\"change\", function (e) {\n                this.set($(this.el).val());\n            }.bind(this));\n    },\n    update: function (newValue, oldValue) {\n//            $(this.el).trigger(\"change\");\n        $(this.el)[0].selectize.clear();\n    }\n});","Vue.filter('date', function (value) {\n    if (value !== '0000-00-00 00:00:00') {\n        return moment(value, \"YYYY-MM-DD HH:mm:ss\").format('DD/MM/YYYY');\n    }\n    return value;\n});\n\nVue.filter('easyDate', function (value) {\n    if (value !== '0000-00-00 00:00:00') {\n        return moment(value, \"YYYY-MM-DD HH:mm:ss\").format('DD MMMM YYYY');\n    }\n    return value;\n});\n\nVue.filter('diffHuman', function (value) {\n    if (value !== '0000-00-00 00:00:00') {\n        return moment(value, \"YYYY-MM-DD HH:mm:ss\").fromNow();\n    }\n    return value;\n});\n\nVue.filter('numberFormat', function (val) {\n    //Seperates the components of the number\n    var n = val.toString().split(\".\");\n    //Comma-fies the first part\n    n[0] = n[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    //Combines the two sections\n    return n.join(\".\");\n});\n\nVue.filter('numberModel', {\n    read: function (val) {\n        if(val) {\n            //Seperates the components of the number\n            var n = val.toString().split(\".\");\n            //Comma-fies the first part\n            n[0] = n[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n            //Combines the two sections\n            return n.join(\".\");\n        }\n    },\n    write: function (val, oldVal, limit) {\n        val = val.replace(/\\s/g, ''); // remove spaces\n        limit = limit || 0; // is there a limit?\n        if(limit) {\n            val = val.substring(0, limit); // if there is a limit, trim the value\n        }\n        //val = val.replace(/[^0-9.]/g, \"\"); // remove characters\n        return parseInt(val.replace(/[^0-9.]/g, \"\"))\n    }\n});\n\nVue.filter('limitString', function (val, limit) {\n    if (val) {\n        var trimmedString = val.substring(0, limit);\n        trimmedString = trimmedString.substr(0, Math.min(trimmedString.length, trimmedString.lastIndexOf(\" \"))) + '...';\n        return trimmedString\n    }\n\n    return val;\n});\n\nVue.filter('percentage', {\n    read: function(val) {\n        return (val * 100);\n    },\n    write: function(val, oldVal){\n        return val / 100;\n    }\n});\n\n\n\n\n"],"sourceRoot":"/source/"}