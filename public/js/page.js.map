{"version":3,"sources":["home/dashboard.js","home/landing.js","purchase-orders/all.js","purchase-orders/submit.js","items/all.js","items/single.js","purchase-requests/all.js","purchase-requests/make.js","staff/all.js","staff/single.js","settings/show.js","projects/add.js","projects/all.js","projects/single.js","system/status.js","user/profile.js","vendors/single.js","purchase-orders/submit/po-billing-address.js","purchase-orders/submit/po-shipping-address.js","purchase-orders/submit/select-line-items.js","purchase-orders/submit/single.js","purchase-orders/submit/summary.js","purchase-requests/single/cancel.js","settings/partials/billing.js","settings/partials/company.js","settings/partials/permissions.js","settings/partials/roles.js","settings/partials/rules.js","reports/spendings/employees.js","reports/spendings/items.js","reports/spendings/projects.js","reports/spendings/vendors.js","vendors/partials/add-bank-account-modal.js","reports/spendings/partials/charts/employees.js","reports/spendings/partials/charts/items.js","reports/spendings/partials/charts/projects.js","reports/spendings/partials/charts/vendors.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzzGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClpGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvrIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzhFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChxGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjvzIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACffile":"page.js","sourcesContent":["Vue.component('dashboard',\n    {\n        name: 'dashboard',\n\n        el: function () {\n            return '#dashboard'\n        },\n        data: function () {\n            return {};\n        },\n        props: ['user'],\n        computed: {\n            date: function () {\n                return moment();\n            }\n        },\n        methods: {},\n        events: {},\n        ready: function () {\n\n            $(document).ready(function () {\n                $.get('/user/calendar_events', function (events) {\n                    $('#dashboard-calendar').fullCalendar({\n                        events: events\n                    })\n                });\n            });\n        }\n    });","Vue.component('landing', {\n    name: 'LandingPage',\n    el: function() {\n        return '#landing'\n    },\n    data: function() {\n        return {\n        \n        };\n    },\n    props: [],\n    computed: {\n        \n    },\n    methods: {\n        clickedJoin: function() {\n            vueEventBus.$emit('clicked-join-button');\n        }\n    },\n    events: {\n        \n    },\n    ready: function() {\n        \n    }\n});","Vue.component('purchase-orders-all', apiRequestAllBaseComponent.extend({\n    name: 'allPurchaseOrders',\n    el: function () {\n        return '#purchase-orders-all';\n    },\n    data: function () {\n        return {\n            requestUrl: '/api/purchase_orders',\n            statuses: ['pending', 'approved', 'rejected', 'all'],\n            hasFilters: true,\n            filterOptions: [\n                {\n                    value: 'number',\n                    label: '# Number'\n                },\n                {\n                    value: 'project_id',\n                    label: 'Project'\n                },\n                {\n                    value: 'currency_id',\n                    label: 'Currency'\n                },\n                {\n                    value: 'total',\n                    label: 'Total Cost'\n                },\n                {\n                    value: 'item_sku',\n                    label: 'Item - SKU'\n                },\n                {\n                    value: 'item_brand',\n                    label: 'Item - Brand'\n                },\n                {\n                    value: 'item_name',\n                    label: 'Item - Name'\n                },\n                {\n                    value: 'submitted',\n                    label: 'Submitted Date'\n                },\n                {\n                    value: 'user_id',\n                    label: 'Made by'\n                }\n            ]\n        };\n    },\n    props: ['user'],\n    computed: {\n        currency: function() {\n            return this.user.company.settings.currency;\n        },\n        currencySymbol: function() {\n          return this.currency.currency_symbol;\n        },\n        currencyDecimalPoints: function() {\n            return this.user.company.settings.currency_decimal_points;\n        },\n        purchaseOrders: function () {\n            return _.omit(this.response.data, 'query_parameters');\n        }\n    },\n    methods: {\n        changeStatus: function (status) {\n            this.makeRequest(updateQueryString({\n                status: status,\n                page: 1\n            }));\n        },\n        toggleApprovableOnly: function () {\n            var approvableOnly = this.params.approvable_only ? 0 : 1;\n            this.makeRequest(updateQueryString({\n                status: status,\n                page: 1,\n                approvable_only: approvableOnly\n            }));\n        },\n        checkUrgent: function (purchaseOrder) {\n            // takes a purchaseOrder and sees\n            // if there are any PR's with urgent tags\n            var urgent = false;\n            _.forEach(purchaseOrder.line_items, function (item) {\n                if (item.purchase_request.urgent) {\n                    urgent = true;\n                }\n            });\n            return urgent;\n        },\n        checkProperty: function (purchaseOrder, property) {\n            var numLineItems = purchaseOrder.line_items.length;\n            var numTrueForProperty = 0;\n            _.forEach(purchaseOrder.line_items, function (item) {\n                item[property] ? numTrueForProperty++ : '';\n            });\n            if (numLineItems == numTrueForProperty) {\n                return true;\n            }\n        }\n    },\n    mixins: [numberFormatter, userCompany],\n    ready: function () {\n    }\n}));","Vue.component('purchase-orders-submit', {\n    el: function () {\n        return '#purchase-orders-submit';\n    },\n    data: function () {\n        return {\n            step: 1,\n            ajaxReady: true,\n            lineItems: [],\n            vendor: {\n                linked_company: {},\n                addresses: [],\n                bank_accounts: []\n            },\n            selectedVendorAddress: '',\n            selectedVendorBankAccount: '',\n            currency: '',\n            billingAddressSameAsCompany: 1,\n            billingAddress: {\n                contact_person: '',\n                phone: '',\n                address_1: '',\n                address_2: '',\n                city: '',\n                zip: '',\n                country_id: '',\n                state: ''\n            },\n            shippingAddressSameAsBilling: 1,\n            shippingAddress: {\n                contact_person: '',\n                phone: '',\n                address_1: '',\n                address_2: '',\n                city: '',\n                zip: '',\n                country_id: '',\n                state: ''\n            },\n            additionalCosts: []\n        };\n    },\n    props: ['user'],\n    computed: {\n        hasLineItems: function () {\n            return this.lineItems.length > 0;\n        },\n        sortedLineItems: function () {\n            return _.orderBy(this.lineItems, 'item.id');\n        },\n        validBillingAddress: function () {\n            return !!this.billingAddress.phone && !!this.billingAddress.address_1 && !!this.billingAddress.city && !!this.billingAddress.zip && !!this.billingAddress.country_id && !!this.billingAddress.state;\n        },\n        validShippingAddress: function () {\n            return !!this.shippingAddress.phone && !!this.shippingAddress.address_1 && !!this.shippingAddress.city && !!this.shippingAddress.zip && !!this.shippingAddress.country_id && !!this.shippingAddress.state;\n        },\n        canCreateOrder: function () {\n            var validVendor = true,\n                validOrder = true,\n                validItems = true;\n\n            // Vendor\n            // one selected\n            if (!this.vendor.id) validVendor = false;\n            // if we need address and no address\n            if (this.PORequiresAddress && !this.selectedVendorAddress) validVendor = false;\n            // if we need bank account and no bank account selected\n            if (this.PORequiresBankAccount && !this.selectedVendorBankAccount) validVendor = false;\n\n            // Order\n            // currency set!\n            if (!this.currency) validOrder = false;\n            // Billing address required fields valid\n            if (!this.billingAddressSameAsCompany && !this.validBillingAddress) validOrder = false;\n            // If shipping NOT the same &&  Shipping address required fields not valid\n            if (!this.shippingAddressSameAsBilling && !this.validShippingAddress) validOrder = false;\n\n            // Items\n            // Make sure we have some items\n            if (!this.lineItems.length > 0) validItems = false;\n            // for each line item...\n            _.forEach(this.lineItems, function (item) {\n                // quantity and price is filled\n                if (!item.order_quantity || item.order_quantity < 1 || !item.order_price) validItems = false;\n                // quantity to order <= quantity requested\n                if (item.order_quantity > item.quantity) validItems = false;\n            });\n\n            // Create away if all valid\n            return validVendor && validOrder && validItems\n        }\n    },\n    methods: {\n        removeLineItem: function (lineItem) {\n            this.lineItems = _.reject(this.lineItems, lineItem);\n        },\n        clearAllLineItems: function () {\n            this.lineItems = [];\n        },\n        goStep: function (step) {\n            this.step = step;\n        },\n        selectAddress: function (address) {\n            this.selectedVendorAddress = this.selectedVendorAddress ? null : address;\n        },\n        visibleAddress: function (address) {\n            if (_.isEmpty(this.selectedVendorAddress)) return true;\n            return this.selectedVendorAddress == address;\n        },\n        createOrder: function () {\n            var self = this;\n            vueClearValidationErrors(self);\n            if (!self.ajaxReady) return;\n            self.ajaxReady = false;\n            $.ajax({\n                url: '/api/purchase_orders/submit',\n                method: 'POST',\n                data: {\n                    \"vendor_id\": self.vendor.id,\n                    \"vendor_address_id\": self.selectedVendorAddress.id,\n                    \"vendor_bank_account_id\": self.selectedVendorBankAccount.id,\n                    \"currency_id\": self.currency.id,\n                    \"billing_address_same_as_company\": self.billingAddressSameAsCompany,\n                    \"billing_contact_person\": self.billingAddress.contact_person,\n                    \"billing_phone\": self.billingAddress.phone,\n                    \"billing_address_1\": self.billingAddress.address_1,\n                    \"billing_address_2\": self.billingAddress.address_2,\n                    \"billing_city\": self.billingAddress.city,\n                    \"billing_zip\": self.billingAddress.zip,\n                    \"billing_country_id\": self.billingAddress.country_id,\n                    \"billing_state\": self.billingAddress.state,\n                    \"shipping_address_same_as_billing\": self.shippingAddressSameAsBilling,\n                    \"shipping_contact_person\": self.shippingAddress.contact_person,\n                    \"shipping_phone\": self.shippingAddress.phone,\n                    \"shipping_address_1\": self.shippingAddress.address_1,\n                    \"shipping_address_2\": self.shippingAddress.address_2,\n                    \"shipping_city\": self.shippingAddress.city,\n                    \"shipping_zip\": self.shippingAddress.zip,\n                    \"shipping_country_id\": self.shippingAddress.country_id,\n                    \"shipping_state\": self.shippingAddress.state,\n                    \"line_items\": self.lineItems,\n                    \"additional_costs\": self.additionalCosts\n                },\n                success: function (data) {\n                    // success\n                    flashNotifyNextRequest('success', 'Submitted Purchase Order');\n                    location.href = \"/purchase_orders\";\n                    self.ajaxReady = true;\n                },\n                error: function (response) {\n                    console.log(response);\n                    vueValidation(response, self);\n                    self.ajaxReady = true;\n                }\n            });\n        },\n        calculateTotal: function (lineItem) {\n            if (!lineItem.order_quantity || !lineItem.order_price) return '-';\n            var currencySymbol = this.currencySymbol || '$';\n            return accounting.formatMoney(lineItem.order_quantity * lineItem.order_price, currencySymbol + ' ', this.currencyDecimalPoints);\n        },\n        updateOtherLineItemPrices: function (changedLineItem) {\n            var self = this;\n\n            var otherLineItemsWithSameItem = _.filter(self.lineItems, function (lineItem) {\n                return lineItem.item.id === changedLineItem.item.id;\n            });\n\n            _.forEach(otherLineItemsWithSameItem, function (lineItem) {\n                if(lineItem.id === changedLineItem.id) return;\n                var index = _.indexOf(self.lineItems, lineItem);\n                Vue.set(self.lineItems[index], 'order_price', changedLineItem.order_price);\n            });\n        },\n        firstLineItemWithItem: function(lineItem) {\n            var firstLineItem = _.find(this.lineItems, function (l) {\n                return l.item.id === lineItem.item.id;\n            });\n            return firstLineItem.id == lineItem.id;\n        },\n        fillAllLineItemQuantities: function() {\n            _.forEach(this.lineItems, function (lineItem) {\n                Vue.set(lineItem, 'order_quantity', lineItem.quantity);\n                // lineItem.order_quantity = lineItem.quantity;\n            });\n        }\n    },\n    mixins: [userCompany, modalSinglePR],\n    ready: function () {\n\n        var self = this;\n\n        vueEventBus.$on('po-submit-selected-vendor', function () {\n            self.selectedVendorAddress = '';\n            self.selectedVendorBankAccount = '';\n        });\n\n        var requestParam = getParameterByName('request');\n        if (requestParam) {\n            var preSelectedRequestIDs = getParameterByName('request').split(',');\n            _.forEach(preSelectedRequestIDs, function (id) {\n                $.get('/api/purchase_requests/' + id, function (request) {\n                    if (request.state === 'open') self.lineItems.push(request);\n                });\n            });\n        }\n\n        vueEventBus.$on('update-line-item-price', function (data) {\n            self.updateOtherLineItemPrices(data.attached);\n        });\n\n    }\n});","Vue.component('items-all', apiRequestAllBaseComponent.extend({\n    name: 'allItems',\n    el: function () {\n        return '#items-all';\n    },\n    data: function () {\n        return {\n            requestUrl: '/api/items',\n            hasFilter: true,\n            filterOptions: [\n                {\n                    value: 'category',\n                    label: 'Category'\n                },\n                {\n                    value: 'brand',\n                    label: 'Brand'\n                },\n                {\n                    value: 'name',\n                    label: 'Name'\n                },\n                {\n                    value: 'project',\n                    label: 'Project'\n                }\n            ]\n        };\n    },\n    computed: {\n        items: function() {\n            return _.omit(this.response.data, 'query_parameters');\n        },\n        hasItems: function() {\n            return !_.isEmpty(this.items);\n        }\n    },\n    methods: {\n        getItemProjects: function (item) {\n            // Parses out project names from an Item's Purchase Requests\n            var projects = [];\n            _.forEach(item.purchase_requests, function (pr) {\n                projects.push(pr.project);\n            });\n            return _.uniqBy(projects, 'id');\n        }\n    },\n    events: {},\n    ready: function () {\n    }\n}));","Vue.component('item-single', {\n    name: 'itemSingle',\n    el: function () {\n        return '#item-single'\n    },\n    data: function () {\n        return {\n            ajaxReady: true,\n\n            fileErrors: []\n        };\n    },\n    props: ['item'],\n    computed: {\n    },\n    methods: {\n        deletePhoto: function(photo) {\n            var self = this;\n            if(!self.ajaxReady) return;\n            self.ajaxReady = false;\n            $.ajax({\n                url: '/api/items/' + self.item.id + '/photo/' + photo.id,\n                method: 'DELETE',\n                success: function(data) {\n                   // success\n                    console.log(data);\n                   self.item.photos = _.reject(self.item.photos, photo);\n                   self.ajaxReady = true;\n                },\n                error: function(response) {\n                    self.ajaxReady = true;\n                }\n            });\n        },\n        clearErrors: function() {\n            this.fileErrors = [];\n        }\n    },\n    events: {},\n    mixins: [userCompany],\n    ready: function () {\n\n        var self = this;\n\n        // Fetch item photos\n        $.ajax({\n            url: '/api/items/' + self.item.id,\n            method: 'GET',\n            success: function(data) {\n               // success\n                self.item.photos = data.photos\n            },\n            error: function(response) {\n                console.log(response);\n            }\n        });\n\n        new Dropzone(\"#item-photo-uploader\", {\n            autoProcessQueue: true,\n            maxFilesize: 5,\n            acceptedFiles: 'image/*',\n            previewTemplate: '<div class=\"dz-image-row\">' +\n            '                       <div class=\"dz-image\">' +\n            '                           <img data-dz-thumbnail>' +\n            '                       </div>' +\n            '                       <div class=\"dz-file-details\">' +\n            '                           <div class=\"name-status\">' +\n            '                               <span data-dz-name class=\"file-name\"></span>' +\n            '                               <div class=\"dz-success-mark status-marker\"><span>✔</span></div>' +\n            '                               <div class=\"dz-error-mark status-marker\"><span>✘</span></div>' +\n            '                           </div>' +\n            '                           <span class=\"file-size\" data-dz-size></span>' +\n            '                           <div class=\"dz-progress progress\">' +\n            '                               <span class=\"dz-upload progress-bar progress-bar-striped active\" data-dz-uploadprogress></span>' +\n            '                           </div>' +\n            '                       </div>' +\n            '                </div>',\n            init: function () {\n                this.on(\"complete\", function (file) {\n                    setTimeout(function () {\n                        this.removeFile(file);\n                    }.bind(this), 5000);\n                });\n                this.on(\"success\", function (files, response) {\n                    // Upload was successful, receive response\n                    // of Photo Model back from the server.\n                    self.item.photos.push(response);\n                });\n                this.on(\"error\", function (file, err) {\n                    if(typeof err === 'object') {\n                        _.forEach(err.file, function (error) {\n                            self.fileErrors.push(file.name + ': ' + error);\n                        });\n                    } else {\n                        self.fileErrors.push(file.name + ': ' + err);\n                    }\n                });\n            }\n        });\n    }\n});","Vue.component('purchase-requests-all', apiRequestAllBaseComponent.extend({\n    name: 'allPurchaseRequests',\n    el: function () {\n        return '#purchase-requests-all';\n    },\n    data: function () {\n        return {\n            requestUrl: '/api/purchase_requests',\n            finishLoading: false,\n            hasFilters: true,\n            filterOptions: [\n                {\n                    value: 'number',\n                    label: '# Number'\n                },\n                {\n                    value: 'project_id',\n                    label: 'Project'\n                },\n                {\n                    value: 'quantity',\n                    label: 'Quantity'\n                },\n                {\n                    value: 'category',\n                    label: 'Category'\n                },\n                {\n                    value: 'item_sku',\n                    label: 'Item - SKU'\n                },\n                {\n                    value: 'item_brand',\n                    label: 'Item - Brand'\n                },\n                {\n                    value: 'item_name',\n                    label: 'Item - Name'\n                },\n                {\n                    value: 'due',\n                    label: 'Due Date'\n                },\n                {\n                    value: 'requested',\n                    label: 'Requested Date'\n                },\n                {\n                    value: 'user_id',\n                    label: 'Requester'\n                }\n            ],\n            states: ['open', 'fulfilled', 'cancelled', 'all'],\n            selectedRequests: [],\n            showBulkActionsMenu: false,\n        };\n    },\n    computed: {\n        purchaseRequests: function() {\n            return _.omit(this.response.data, 'query_parameters');\n        },\n        allPurchaseRequestsChecked: function () {\n            var purchaseRequestIDs = _.map(_.filter(this.purchaseRequests, function(request) {\n                return request.state === 'open';\n            }), function (request) {\n                return request.id;\n            });\n\n            var selectedRequestIDs = _.map(this.selectedRequests, function (request) {\n                return request.id\n            });\n            return _.intersection(selectedRequestIDs, purchaseRequestIDs).length === purchaseRequestIDs.length;\n        }\n    },\n    methods: {\n        changeState: function (state) {\n            this.makeRequest(updateQueryString({\n                state: state,\n                page: 1\n            }));\n        },\n        toggleUrgentOnly: function () {\n            var urgent = this.params.urgent ? 0 : 1;\n            this.makeRequest(updateQueryString({\n                state: this.params.state, // use same state\n                page: 1, // Reset to page 1\n                urgent: urgent\n            }));\n        },\n        selectPR: function (purchaseRequest) {\n            this.alreadySelectedPR(purchaseRequest) ? this.selectedRequests = _.reject(this.selectedRequests, purchaseRequest) : this.selectedRequests.push(purchaseRequest);\n        },\n        alreadySelectedPR: function (purchaseRequest) {\n            return _.find(this.selectedRequests, function (pr) {\n                return pr.id === purchaseRequest.id;\n            });\n        },\n        selectAll: function() {\n            var self = this;\n            if (self.allPurchaseRequestsChecked) {\n                _.forEach(self.purchaseRequests, function (request) {\n                    self.selectedRequests = _.reject(self.selectedRequests, request);\n                });\n            } else {\n                _.forEach(self.purchaseRequests, function (request) {\n                    if (!self.alreadySelectedPR(request) && request.state === 'open') self.selectedRequests.push(request);\n                });\n            }\n        },\n        createPurchaseOrder: function() {\n            var url = '/purchase_orders/submit?request=';\n            _.forEach(this.selectedRequests, function (request) {\n                url += request.id + ',';\n            });\n            location.href = url.substring(0, url.length - 1);\n        }\n    },\n    ready: function () {\n    }\n}));","Vue.component('purchase-requests-make', {\n    name: 'makePurchaseRequest',\n    el: function () {\n        return '#purchase-requests-add';\n    },\n    data: function () {\n        return {\n            pageReady: false,\n            ajaxReady: true,\n            projectID: '',\n            itemID: '',\n            quantity: '',\n            due: '',\n            urgent: ''\n        };\n    },\n    methods: {\n        submitMakePRForm: function () {\n            var self = this;\n\n\n            // Send Req. via Ajax\n            vueClearValidationErrors(self);\n            if (!self.ajaxReady) return;\n            self.ajaxReady = false;\n            $.ajax({\n                url: '/purchase_requests/make',\n                method: 'POST',\n                data: {\n                    'project_id': self.projectID,\n                    'item_id': self.itemID,\n                    'quantity': self.quantity,\n                    'due': self.due,\n                    'urgent': (self.urgent) ? 1 : 0\n                },\n                success: function (data) {\n                    // success\n                    console.log(data);\n                    console.log('success!');\n                    flashNotifyNextRequest('success', 'Made a new Purchase Request');\n                    window.location.href = \"/purchase_requests\";\n                },\n                error: function (response) {\n                    console.log(response);\n\n                    vueValidation(response, self);\n                    self.ajaxReady = true;\n                }\n            });\n        }\n    },\n    computed: {\n\n    },\n    ready: function () {\n        var self = this;\n\n        $('#pr-item-selection').selectize({\n            valueField: 'id',\n            searchField: ['sku', 'brand', 'name'],\n            create: false,\n            placeholder: 'Search by SKU, Brand or Name',\n            render: {\n                option: function (item, escape) {\n\n                    var sku = (item.sku) ? escape(item.sku) : '';\n                    var brand = (item.brand) ? escape(item.brand) + ' - ' : '';\n                    var image = (item.photos[0]) ? ('<img src=\"' + escape(item.photos[0].thumbnail_path) + '\">') : '<i class=\"fa fa-image\"></i>';\n\n                    return '<div class=\"item-single-option\">' +\n                        '       <div class=\"item-thumbnail\">' +\n                                    image +\n                        '       </div>' +\n                        '       <div class=\"details\">' +\n                        '           <span class=\"item-sku\">' + sku + '</span>' +\n                        '           <span class=\"item-brand\">' + brand + '</span>' +\n                        '           <span class=\"item-name\">' + escape(item.name) + '</span>' +\n                        '       </div>' +\n                        '</div>';\n                },\n                item: function (item, escape) {\n\n                    var sku = (item.sku) ? escape(item.sku) : '';\n                    var brand = (item.brand) ? escape(item.brand) + ' - ' : '';\n                    var image = (item.photos[0]) ? ('<img src=\"' + escape(item.photos[0].thumbnail_path) + '\">') : '<i class=\"fa fa-image\"></i>';\n                    var imageGallery =  '';\n                    if(item.photos.length > 0) {\n                        imageGallery += '<ul class=\"item-images list-unstyled\">';\n                        for(var i = 0 ; i < item.photos.length; i++) {\n                            imageGallery += '<li class=\"item-select-image\"><a class=\"fancybox\" rel=\"group\" href=\"' + escape(item.photos[i].path) + '\"><img src=\"' + escape(item.photos[i].thumbnail_path) + '\" alt=\"\" /></a></li>'\n                        }\n                        imageGallery += '</ul>';\n                    }\n\n                    return '<div class=\"item-selected\">' +\n                        '       <div class=\"item-thumbnail\">' +\n                                    image +\n                        '       </div>' +\n                        '       <div class=\"details\">' +\n                        '           <span class=\"item-sku\">' + sku + '</span>' +\n                        '           <span class=\"item-brand\">' + brand + '</span>' +\n                        '           <span class=\"item-name\">' + escape(item.name) + '</span>' +\n                        '           <span class=\"item-specification\">' + escape(item.specification) + '</span>' +\n                        '       </div>' +\n                                imageGallery +\n                        '</div>'\n                }\n            },\n            load: function (query, callback) {\n                if (!query.length) return callback();\n                $.ajax({\n                    url: '/api/items/search/' + encodeURIComponent(query),\n                    type: 'GET',\n                    error: function () {\n                        callback();\n                    },\n                    success: function (res) {\n                        console.log(res);\n                        callback(res);\n                    }\n                });\n            },\n            onChange: function (value) {\n                self.itemID = value;\n            }\n    });\n\n        self.$nextTick(function () {\n            self.pageReady = true;\n        });\n    }\n});\n\n","Vue.component('staff-all', {\n    name: 'staffAll',\n    el: function() {\n        return '#staff-all'\n    },\n    data: function() {\n        return {\n            staff: [],\n            tableHeaders: [\n                {\n                    label: 'Name',\n                    path: ['name'],\n                    sort: 'name'\n                },\n                {\n                    label: 'Role',\n                    path: ['role', 'position'],\n                    sort: 'role.position'\n                },\n                {\n                    label: 'Email',\n                    path: ['email'],\n                    sort: 'email'\n                },\n                {\n                    label: 'Status',\n                    path: ['status'],\n                    sort: 'status'\n                }\n            ]\n        };\n    },\n    props: ['user'],\n    computed: {\n        \n    },\n    methods: {\n        \n    },\n    events: {\n        \n    },\n    ready: function() {\n        var self = this;\n        $.get('/api/staff', function (data) {\n            self.staff = data;\n        });\n    }\n});","Vue.component('staff-single', {\n    name: 'staffSingle',\n    el: function () {\n        return '#staff-single'\n    },\n    data: function () {\n        return {\n            showChangeRoleForm: false,\n            changeButton: false,\n            ajaxReady: true,\n            newRoleId: ''\n        };\n    },\n    props: ['staff'],\n    computed: {},\n    methods: {\n        toggleRoleForm: function() {\n            this.showChangeRoleForm = !this.showChangeRoleForm;\n        }\n    },\n    events: {\n    },\n    ready: function () {\n        var self = this;\n    }\n});","Vue.component('settings', {\n    name: 'Settings',\n    el: function () {\n        return '#system-settings';\n    },\n    data: function () {\n        return {\n            settingsView: 'company',\n            navLinks: [\n                {\n                    label: 'Company',\n                    section: 'company'\n                },\n                {\n                    label: 'Permissions',\n                    section: 'permissions'\n                },\n                {\n                    label: 'Rules',\n                    section: 'rules'\n                }\n            ],\n            roles: []   // shared with Permissions, Rules\n        }\n    },\n    props: ['user'],\n    methods: {\n        changeView: function (view) {\n            this.settingsView = view;\n        }\n    },\n    components: {\n        settingsCompany: 'settings-company',\n        settingsPermissions: 'settings-permissions',\n        settingsRules: 'settings-rules'\n    }\n});\n","Vue.component('projects-add-team', {\n    name: 'projectAddTeam',\n    el: function() {\n        return '#projects-team-add'\n    },\n    data: function() {\n        return {\n            ajaxReady: true,\n            existingUserId: '',\n            newUserName: '',\n            newUserEmail: '',\n            newUserRoleId: ''\n        };\n    },\n    props: ['project'],\n    computed: {\n\n    },\n    methods: {\n        addTeamMember: function() {\n            var self = this;\n            vueClearValidationErrors(self);\n            if(!self.ajaxReady) return;\n            self.ajaxReady = false;\n            $.ajax({\n                url: '/projects/' + self.project.id + '/team/add',\n                method: 'POST',\n                data: {\n                    \"existing_user_id\": self.existingUserId,\n                    \"name\": self.newUserName,\n                    \"email\": self.newUserEmail,\n                    \"role_id\": self.newUserRoleId\n                },\n                success: function(data) {\n                   // success\n                    flashNotifyNextRequest('success', 'Added ' + self.newUserName + ' to project ' + self.project.name);\n                    location.href = \"/projects/\" + self.project.id;\n                   self.ajaxReady = true;\n                },\n                error: function(response) {\n                    console.log(response);\n\n                    vueValidation(response, self);\n                    self.ajaxReady = true;\n                }\n            });\n        }\n    },\n    events: {\n\n    },\n    ready: function() {\n    }\n});","Vue.component('projects-all', {\n    name: 'projectsAll',\n    el: function () {\n        return '#projects-all'\n    },\n    data: function () {\n        return {\n            projects: [],\n            popupVisible: true,\n            projectToDelete: {},\n            ajaxReady: true\n        };\n    },\n    props: [],\n    computed: {},\n    methods: {\n        deleteProject: function (project) {\n            this.projectToDelete = project;\n\n            var settings = {\n                title: 'Confirm Delete ' + project.name,\n                body: 'Deleting a Project is permanent and cannot be reversed. Deleting a project will mean Team Members (staff) who are a part of the project will no longer receive notifications or perform actions for the Project. If you started the Project again, you will have to re-add all Team Members individually.',\n                buttonText: 'Permanently Remove ' + project.name,\n                buttonClass: 'btn btn-danger',\n                callbackEventName: 'remove-project'\n            };\n            this.$broadcast('new-modal', settings);\n        }\n    },\n    events: {\n        'remove-project': function () {\n            var self = this;\n            if (!self.ajaxReady) return;\n            self.ajaxReady = false;\n            $.ajax({\n                url: '/projects/' + self.projectToDelete.id,\n                method: 'DELETE',\n                success: function (data) {\n                    // success\n                    self.projects = _.reject(self.projects, self.projectToDelete);\n                    flashNotify('success', 'Permanently Deleted ' + self.projectToDelete.name);\n                    self.projectToDelete = {};\n                    self.ajaxReady = true;\n                },\n                error: function (response) {\n                    self.ajaxReady = true;\n                }\n            });\n        }\n    },\n    ready: function () {\n\n        // Fetch projects\n        var self = this;\n        $.ajax({\n            url: '/api/projects',\n            method: 'GET',\n            success: function(data) {\n               // success\n               self.projects = data;\n            },\n            error: function(response) {\n            }\n        });\n\n        // Popup Stuff\n            // Bind click\n            $(document).on('click', '.button-project-dropdown', function (e) {\n                e.stopPropagation();\n\n                $('.button-project-dropdown.active').removeClass('active');\n                $(this).addClass('active');\n\n                $('.project-popup').hide();\n                $(this).next('.project-popup').show();\n            });\n\n            // To hide popup\n            $(document).click(function (event) {\n                if (!$(event.target).closest('.project-popup').length && !$(event.target).is('.project-popup')) {\n                    $('.button-project-dropdown.active').removeClass('active');\n                    $('.project-popup').hide();\n                }\n            });\n\n    }\n});","Vue.component('project-single', {\n    name: 'projectSingle',\n    el: function() {\n        return '#project-single-view'\n    },\n    data: function() {\n        return {\n            ajaxReady: true,\n            teamMembers: [],\n            tableHeaders: [\n                {\n                    label: 'Name',\n                    path: ['name'],\n                    sort: 'name'\n                },\n                {\n                    label: 'Role',\n                    path: ['role', 'position'],\n                    sort: 'role.position'\n                },\n                {\n                    label: 'Email',\n                    path: ['email'],\n                    sort: 'email'\n                }\n            ]\n        };\n    },\n    props: ['project'],\n    computed: {\n    },\n    methods: {\n        removeStaff: function(staff) {\n            var self = this;\n            if (!self.ajaxReady) return;\n            self.ajaxReady = false;\n            $.ajax({\n                url: '/projects/' + self.project.id + '/team/remove',\n                method: 'PUT',\n                data: {\n                  user_id: staff.id\n                },\n                success: function() {\n                    self.project.team_members = _.reject(self.project.team_members, staff);\n                    flashNotify('success', 'Removed ' + strCapitalize(staff.name));\n                    self.ajaxReady = true;\n                },\n                error: function(res) {\n                    console.log(res);\n                    self.ajaxReady = true;\n                }\n            })\n        }\n    },\n    events: {\n    },\n    ready: function() {}\n});","Vue.component('system-status', {\n    name: 'SystemStatus',\n    el: function() {\n        return '#system-status'\n    },\n    data: function() {\n        return {\n\n        };\n    },\n    props: ['company-count'],\n    computed: {\n\n    },\n    methods: {\n\n    },\n    events: {\n\n    },\n    ready: function() {\n        var self = this;\n\n        this.pusher = new Pusher($('meta[name=\"pusher-key\"]').attr('content'), {\n            cluster: 'ap1',\n            encrypted: true\n        });\n\n        this.pusherChannel = this.pusher.subscribe('system');\n\n        this.pusherChannel.bind('App\\\\Events\\\\NewCompanySignedUp', function(message) {\n            alert('caught!');\n            self.companyCount ++;\n        });\n        \n    }\n}); ","Vue.component('user-profile', {\n    name: 'userProfile',\n    el: function() {\n        return '#user-profile'\n    },\n    data: function() {\n        return {\n            ajaxReady: true,\n            editingContact: false,\n            editingBio: false,\n            showProfilePhotoMenu: false\n        };\n    },\n    props: [],\n    computed: {},\n    methods: {\n        togglePhotoMenu: function() {\n            this.showProfilePhotoMenu = !this.showProfilePhotoMenu;\n        },\n        toggleEditMode: function(section) {\n            this['editing' + section] = ! this['editing' + section];\n            this.editingSection = (this.editingSection ===  section) ? '' : section;\n        },\n        updateProfile: function(section) {\n            var self = this;\n            vueClearValidationErrors(self);\n            if(!self.ajaxReady) return;\n            self.ajaxReady = false;\n            $.ajax({\n                url: '/user/profile',\n                method: 'PUT',\n                data: {\n                    \"name\": self.user.name,\n                    \"email\": self.user.email,\n                    \"phone\": self.user.phone,\n                    \"bio\": self.user.bio\n                },\n                success: function(data) {\n                   // success\n                    self.toggleEditMode(section);\n                    flashNotify('success', 'Updated profile');\n                   self.ajaxReady = true;\n                },\n                error: function(response) {\n                    console.log(response);\n\n                    vueValidation(response, self);\n                    self.ajaxReady = true;\n                }\n            });\n        },\n        showFileSelecter: function() {\n            $(this.$els.fileInput).click();\n        },\n        uploadProfilePhoto: function() {\n            $(this.$els.profilePhotoForm).submit();\n        },\n        removePhoto: function() {\n            var self = this;\n            if(!self.ajaxReady) return;\n            self.ajaxReady = false;\n            $.ajax({\n                url: '/user/profile/photo',\n                method: 'DELETE',\n                success: function(data) {\n                   self.ajaxReady = true;\n                    flashNotifyNextRequest('success', 'Removed profile photo');\n                    location.reload();\n                },\n                error: function(response) {\n                    console.log(response);\n                    flashNotify('error', 'Could not remove photo');\n                    self.ajaxReady = true;\n                }\n            });\n        }\n    },\n    events: {\n        \n    },\n    mixins: [userCompany],\n    ready: function() {\n        var self = this;\n        $(document).click(function (event) {\n            if (!$(event.target).closest('.profile-popup').length && !$(event.target).is('.profile-popup')) {\n                self.showProfilePhotoMenu = false;\n            }\n        });\n    }\n});","Vue.component('vendor-single', {\n    name: 'vendorSingle',\n    el: function () {\n        return '#vendor-single'\n    },\n    data: function () {\n        return {\n            ajaxReady: true,\n            description: '',\n            editDescription: false,\n            savedDescription: '',\n            companyIDToLink: ''\n        };\n    },\n    props: ['vendor'],\n    computed: {},\n    methods: {\n        startEditDescription: function () {\n            this.editDescription = true;\n            this.$nextTick(function () {\n                $editor = $('.description-editor');\n                $editor.focus();\n                autosize.update($editor);\n            });\n        },\n        saveDescription: function () {\n            this.editDescription = false;\n            this.savedDescription = 'saving';\n            var self = this;\n            if (!self.ajaxReady) {\n                self.savedDescription = 'error';\n                return;\n            }\n            self.ajaxReady = false;\n            $.ajax({\n                url: '/vendors/' + self.vendor.id + '/description',\n                method: 'POST',\n                data: {\n                    \"description\": self.description\n                },\n                success: function (data) {\n                    // success\n                    self.savedDescription = 'success';\n                    self.vendor.description = self.description;\n                    self.ajaxReady = true;\n                },\n                error: function (response) {\n                    self.savedDescription = 'error';\n                    self.ajaxReady = true;\n                }\n            });\n        },\n        addressSetPrimary: function (address) {\n            var self = this;\n            if (!self.ajaxReady) return;\n            self.ajaxReady = false;\n            $.ajax({\n                url: '/api/address/' + address.id + '/set_primary',\n                method: 'PUT',\n                success: function (data) {\n                    // success\n                    self.vendor.addresses = _.map(self.vendor.addresses, function (vendorAddress) {\n                        if (vendorAddress.id === address.id) {\n                            vendorAddress.primary = 1;\n                        } else {\n                            vendorAddress.primary = 0;\n                        }\n                        return vendorAddress;\n                    });\n                    self.ajaxReady = true;\n                },\n                error: function (response) {\n                    console.log(response);\n                    self.ajaxReady = true;\n                }\n            });\n        },\n        removeAddress: function (address) {\n            var self = this;\n            if (!self.ajaxReady) return;\n            self.ajaxReady = false;\n            $.ajax({\n                url: '/api/address/' + address.id,\n                method: 'DELETE',\n                success: function (data) {\n                    // success\n                    flashNotify('success', 'Removed address');\n                    self.vendor.addresses = _.reject(self.vendor.addresses, address);\n                    self.ajaxReady = true;\n                },\n                error: function (response) {\n                    console.log(response);\n                    self.ajaxReady = true;\n                }\n            });\n        },\n        bankSetPrimary: function (account) {\n            var self = this;\n            if (!self.ajaxReady) return;\n            self.ajaxReady = false;\n            $.ajax({\n                url: '/vendors/' + self.vendor.id + '/bank_accounts/' + account.id + '/set_primary',\n                method: 'POST',\n                success: function (data) {\n                    self.vendor.bank_accounts = _.map(self.vendor.bank_accounts, function (bankAccount) {\n                        if (bankAccount.id === account.id) {\n                            bankAccount.primary = 1;\n                        } else {\n                            bankAccount.primary = 0;\n                        }\n                        return bankAccount;\n                    });\n                    self.ajaxReady = true;\n                },\n                error: function (response) {\n                    flashNotify('error', 'Could not set Bank Account as primary');\n                    self.ajaxReady = true;\n                }\n            });\n        },\n        deleteAccount: function (account) {\n            var self = this;\n            if (!self.ajaxReady) return;\n            self.ajaxReady = false;\n            $.ajax({\n                url: '/vendors/' + self.vendor.id + '/bank_accounts/' + account.id,\n                method: 'DELETE',\n                success: function (data) {\n                    self.vendor.bank_accounts = _.reject(self.vendor.bank_accounts, account);\n                    flashNotify('success', 'Removed bank account');\n                    self.ajaxReady = true;\n                },\n                error: function (response) {\n                    console.log(response);\n                    flashNotify('error', 'Could not remove bank account');\n                    self.ajaxReady = true;\n                }\n            });\n        },\n        unlinkCompany: function () {\n            var self = this;\n            if (!self.ajaxReady) return;\n            self.ajaxReady = false;\n            $.ajax({\n                url: '/vendors/' + self.vendor.id + '/unlink',\n                method: 'PUT',\n                data: {\n                    \"vendor_id\": self.vendor.id\n                },\n                success: function (data) {\n                    // success\n                    flashNotify('success', 'Unlinked company to vendor');\n                    self.vendor = data;\n                    self.ajaxReady = true;\n                },\n                error: function (response) {\n                    console.log(response);\n\n                    self.ajaxReady = true;\n                }\n            });\n        }\n    },\n    events: {\n        'address-added': function (address) {\n            this.vendor.addresses.push(address);\n        }\n    },\n    mixins: [userCompany],\n    ready: function () {\n        var self = this;\n    }\n});","Vue.component('po-billing-address', {\n    name: 'purchaseOrderSubmitBillingAddress',\n    data: function () {\n        return {};\n    },\n    template: '<div class=\"check-same-company checkbox styled\" v-if=\"companyAddress\">' +\n    '<label>' +\n    '<i class=\"fa fa-check-square-o checked\" v-show=\"billingAddressSameAsCompany\"></i>' +\n    '<i class=\"fa fa-square-o empty\" v-else></i>' +\n    '<input class=\"clickable hidden\" type=\"checkbox\" v-model=\"billingAddressSameAsCompany\" :true-value=\"1\" :false-value=\"0\" >' +\n    'Same as Company Address' +\n    '</label>' +\n    '</div>' +\n    '<div class=\"company-address\" v-show=\"companyAddress && billingAddressSameAsCompany\">' +\n    '<address :address=\"companyAddress\"></address>' +\n    '</div>' +\n        '<div class=\"address-fields\" v-show=\"companyAddress && ! billingAddressSameAsCompany\">' +\n    '<div class=\"row\">' +\n    '<div class=\"col-sm-6\">' +\n    '<div class=\"shift-label-input\">' +\n    '<input type=\"text\" class=\"not-required\" v-model=\"billingAddress.contact_person\" :class=\"{' + \"'filled': billingAddress.contact_person\" + '}\" :value=\"companyAddress.contact_person\" >' +\n    '<label placeholder=\"Contact Person\"></label>' +\n    '</div>' +\n    '</div>' +\n    '<div class=\"col-sm-6\">' +\n    '<div class=\"shift-label-input\">' +\n    '<input type=\"text\" required :value=\"companyAddress.phone\" v-model=\"billingAddress.phone\" >' +\n    '<label placeholder=\"Phone\" class=\"required\"></label>' +\n    '</div>' +\n    '</div>' +\n    '</div>' +\n    '<div class=\"shift-label-input\">' +\n    '<input type=\"text\" required :value=\"companyAddress.address_1\" v-model=\"billingAddress.address_1\" >' +\n    '<label placeholder=\"Address\" class=\"required\"></label>' +\n    '</div>' +\n    '<div class=\"shift-label-input\">' +\n    '<input type=\"text\" required :value=\"companyAddress.address_2\" class=\"not-required\" :class=\"{' + \"'filled': billingAddress.address_2\" + '}\" v-model=\"billingAddress.address_2\" >' +\n    '<label placeholder=\"Address 2\"></label>' +\n    '</div>' +\n    '<div class=\"row\">' +\n    '<div class=\"col-sm-6\">' +\n    '<div class=\"shift-label-input\">' +\n    '<input type=\"text\" required :value=\"companyAddress.city\" v-model=\"billingAddress.city\">' +\n    '<label placeholder=\"City\" class=\"required\"></label>' +\n    '</div>' +\n    '</div>' +\n    '<div class=\"col-sm-6\">' +\n    '<div class=\"shift-label-input\">' +\n    '<input type=\"text\" required :value=\"companyAddress.zip\" v-model=\"billingAddress.zip\" >' +\n    '<label class=\"required\" placeholder=\"Zip\"></label>' +\n    '</div>' +\n    '</div>' +\n    '</div>' +\n    '<div class=\"row\">' +\n    '<div class=\"col-sm-6\">' +\n    '<div class=\"form-group shift-select\">' +\n    '<label class=\"required\">Country</label>' +\n    '<country-selecter :name.sync=\"billingAddress.country_id\" :default=\"companyAddress.country_id\" :event=\"' + \"'selected-billing - country'\" + '\"></country-selecter>' +\n    '</div>' +\n    '</div>' +\n    '<div class=\"col-sm-6\">' +\n    '<div class=\"form-group shift-select\">' +\n    '<label class=\"required\">State</label>' +\n    '<state-selecter :name.sync=\"billingAddress.state\" :default=\"companyAddress.state\" :listen=\"' + \"'selected-billing - country'\" + '\"></state-selecter>' +\n    '</div>' +\n    '</div>' +\n    '</div>' +\n    '</div>',\n    props: ['billing-address-same-as-company', 'billing-address', 'company'],\n    computed: {\n        companyAddress: function () {\n            if (_.isEmpty(this.company.address)) return false;\n            return this.company.address;\n        }\n    },\n    methods: {},\n    events: {},\n    ready: function () {\n\n    }\n});","Vue.component('po-shipping-address', {\n    name: 'purchaseOrderShippingAddress',\n    template: '<div class=\"check-same-billing checkbox styled\">'+\n    '<label>'+\n    '<i class=\"fa fa-check-square-o checked\" v-show=\"shippingAddressSameAsBilling\"></i>'+\n    '<i class=\"fa fa-square-o empty\" v-else></i>'+\n'<input class=\"clickable hidden\" type=\"checkbox\" v-model=\"shippingAddressSameAsBilling\" :true-value=\"1\" :false-value=\"0\" >'+\n    'Same as billing address'+\n'</label>'+\n'</div>'+\n'<div class=\"address-fields\" v-show=\"! shippingAddressSameAsBilling\">'+\n    '<div class=\"row\">'+\n    '<div class=\"col-sm-6\">'+\n    '<div class=\"shift-label-input\">'+\n    '<input type=\"text\" class=\"not-required\" v-model=\"shippingAddress.contact_person\" :class=\"{' +  \"'filled': shippingAddress.contact_person\" +  '}\">'+\n    '<label placeholder=\"Contact Person\"></label>'+\n    '</div>'+\n    '</div>'+\n    '<div class=\"col-sm-6\">'+\n    '<div class=\"shift-label-input\">'+\n    '<input type=\"text\" required v-model=\"shippingAddress.phone\">'+\n    '<label placeholder=\"Phone\" class=\"required\"></label>'+\n    '</div>'+\n    '</div>'+\n    '</div>'+\n    '<div class=\"shift-label-input\">'+\n    '<input type=\"text\" required v-model=\"shippingAddress.address_1\">'+\n    '<label placeholder=\"Address\" class=\"required\"></label>'+\n    '</div>'+\n    '<div class=\"shift-label-input\">'+\n    '<input type=\"text\" required v-model=\"shippingAddress.address_2\" class=\"not-required\" :class=\"{' + \"'filled': shippingAddress.address_2\" + '}\">'+\n'<label placeholder=\"Address 2\"></label>'+\n    '</div>'+\n    '<div class=\"row\">'+\n    '<div class=\"col-sm-6\">'+\n    '<div class=\"shift-label-input\">'+\n    '<input type=\"text\" required v-model=\"shippingAddress.city\">'+\n    '<label class=\"required\" placeholder=\"City\"></label>'+\n    '</div>'+\n    '</div>'+\n    '<div class=\"col-sm-6\">'+\n    '<div class=\"shift-label-input\">'+\n    '<input type=\"text\" required v-model=\"shippingAddress.zip\">'+\n    '<label class=\"required\" placeholder=\"Zip\"></label>'+\n    '</div>'+\n    '</div>'+\n    '</div>'+\n    '<div class=\"row\">'+\n    '<div class=\"col-sm-6\">'+\n    '<div class=\"form-group shift-select\">'+\n    '<label class=\"required\">Country</label>'+\n    '<country-selecter :name.sync=\"shippingAddress.country_id\" :event=\"' + \"'selected-shipping-country'\" + '\"></country-selecter>'+\n    '</div>'+\n    '</div>'+\n    '<div class=\"col-sm-6\">'+\n    '<div class=\"form-group shift-select\">'+\n    '<label class=\"required\">State</label>'+\n    '<state-selecter :name.sync=\"shippingAddress.state\" :listen=\"' + \"'selected-shipping-country'\" + '\"></state-selecter>'+\n    '</div>'+\n    '</div>'+\n    '</div>'+\n    '</div>',\n    data: function() {\n        return {\n\n        };\n    },\n    props: ['shipping-address-same-as-billing', 'shipping-address'],\n    computed: {\n\n    },\n    methods: {\n\n    },\n    events: {\n\n    },\n    ready: function() {\n\n    }\n});","Vue.component('select-line-items', {\n    name: 'selectLineItems',\n    template: '<div class=\"project-selecter\">'+\n    '<h4>Project</h4>'+\n    '<user-projects-selecter :name.sync=\"projectID\"></user-projects-selecter>'+\n    '</div>' +\n    '<div class=\"purchase_requests\"'+\n    ':class=\"{'+\n    \"'inactive': ! projectID\"+\n    '}\"'+\n    '>'+\n    '<div class=\"overlay\"></div>'+\n    '<h4>Purchase Requests</h4>'+\n    '<div class=\"pr-controls\">'+\n    '<form class=\"form-pr-search\" @submit.prevent=\"searchPurchaseRequests\">'+\n    '<input class=\"form-control input-item-search\"'+\n    'type=\"text\"'+\n    'placeholder=\"Search by # Number, Item (Brand or Name) or Requester\"'+\n    '@keyup=\"searchPurchaseRequests\"'+\n    'v-model=\"searchTerm\"'+\n    ':class=\"{'+\n    \"'active': searchTerm && searchTerm.length > 0\"+\n    '}\"'+\n    '>'+\n    '</form>'+\n    '</div>'+\n    '<div v-show=\"hasPurchaseRequests\">'+\n    '<div class=\"table-responsive\">'+\n    '<table class=\"table table-hover table-standard table-purchase-requests-po-submit\">'+\n    '<thead>'+\n    '<tr>'+\n    '<th class=\"heading-center heading-select-all padding-even\">'+\n    '<div class=\"checkbox styled\" :class=\"{' +\n    \"'checked': allPurchaseRequestsChecked\" +\n    '}\">'+\n    '<label>'+\n    '<i class=\"fa fa-check-square-o checked\"></i>'+\n    '<i class=\"fa fa-square-o empty\"></i>'+\n    '<input class=\"clickable hidden\"'+\n    'type=\"checkbox\"'+\n    '@change=\"selectAllPR\"'+\n    ':checked.sync=\"allPurchaseRequestsChecked\"'+\n    '>'+\n    '</label>'+\n    '</div>'+\n    '</th>'+\n    '<th class=\"clickable\"'+\n    '@click=\"changeSort(' + \"'number'\" +')\"'+\n    ':class=\"{'+\n    \"'current_asc': sort === 'number' && order === 'asc',\"+\n    \"'current_desc': sort === 'number' && order === 'desc'\"+\n    '}\"'+\n    '>'+\n    'PR'+\n    '</th>'+\n    '<th class=\"clickable\"'+\n    '@click=\"changeSort(' + \"'item_name'\" + ')\"'+\n    ':class=\"{'+\n    \"'current_asc': sort === 'item_name' && order === 'asc',\"+\n    \"'current_desc': sort === 'item_name' && order === 'desc'\"+\n    '}\"'+\n    '>'+\n    'Item'+\n    '</th>'+\n    '<th class=\"clickable\"'+\n    '@click=\"changeSort(' + \"'due'\" + ')\"'+\n    ':class=\"{'+\n    \"'current_asc': sort === 'due' && order === 'asc',\"+\n    \"'current_desc': sort === 'due' && order === 'desc'\"+\n    '}\"'+\n    '>'+\n    'Due</th>'+\n    '</tr>'+\n    '</thead>'+\n    '<tbody>'+\n    '<template v-for=\"purchaseRequest in purchaseRequests\">'+\n    '<tr class=\"row-single-pr\">'+\n    '<td class=\"col-checkbox\">'+\n    '<div class=\"checkbox styled\" :class=\"{' +\n    \"'checked': alreadySelectedPR(purchaseRequest)\" +\n    '}\">'+\n    '<label>'+\n    '<i class=\"fa fa-check-square-o checked\"></i>'+\n    '<i class=\"fa fa-square-o empty\"></i>'+\n    '<input class=\"clickable hidden\"'+\n    'type=\"checkbox\"'+\n    '@change=\"selectPR(purchaseRequest)\"'+\n    ':checked=\"alreadySelectedPR(purchaseRequest)\"'+\n    '>'+\n    '</label>'+\n    '</div>'+\n    '</td>'+\n    '<td class=\"no-wrap col-number\">'+\n    '<a class=\"dotted clickable\" @click=\"showSinglePR(purchaseRequest)\">#{{ purchaseRequest.number }}</a>'+\n    '</td>'+\n    '<td class=\"col-item\">'+\n    '<a class=\"dotted clickable\" @click=\"showSinglePR(purchaseRequest)\">'+\n    '<span class=\"item-brand\"'+\n    'v-if=\"purchaseRequest.item.brand.length > 0\">{{ purchaseRequest.item.brand }} - </span>'+\n    ' <span class=\"item-name\">{{ purchaseRequest.item.name }}</span>'+\n    '</a>'+\n    '<div class=\"bottom\">'+\n    '<span '+\n    'v-if=\"purchaseRequest.urgent\" class=\"badge-urgent with-tooltip\" v-tooltip title=\"Urgent Request\" data-placement=\"bottom\"> <i '+\n    'class=\"fa fa-warning\"></i></span>'+\n    '<div class=\"quantity\"><label>QTY:</label> {{ purchaseRequest.quantity }}</div>'+\n    '</div>'+\n    '</td>'+\n    '<td class=\"col-due no-wrap\">'+\n    '<span class=\"pr-due\">{{ purchaseRequest.due | date }}</span>'+\n    '</td>'+\n    '</tr>'+\n    '</template>'+\n    '</tbody>'+\n    '</table>'+\n    '</div>'+\n    '<div class=\"page-controls bottom\">'+\n    '<per-page-picker :response=\"response\" :req-function=\"fetchPurchaseRequests\"></per-page-picker>'+\n    '<paginator :response=\"response\" :event-name=\"' + \"'po-submit-pr-page'\" + '\"></paginator>'+\n    '</div>'+\n    '</div>'+\n    '<div class=\"empty-stage\" v-else>'+\n    '<i class=\"fa  fa-hand-rock-o\"></i>'+\n    '<h4>No Purchase Requests</h4>'+\n    '<p>We couldn\\'t find any requests to fulfill. Try selecting a different Project or <a '+\n    'class=\"dotted clickable\" @click=\"clearSearch\">clear</a> the search.</p>'+\n    '</div>'+\n    '</div>',\n    data: function() {\n        return {\n            ajaxReady: true,\n            ajaxObject: {},\n            response: {},\n            projectID: '',\n            purchaseRequests: [],\n            sort: 'number',\n            order: 'asc',\n            urgent: '',\n            searchTerm: ''\n        };\n    },\n    props: ['line-items'],\n    computed: {\n        hasPurchaseRequests: function () {\n            return !_.isEmpty(this.purchaseRequests);\n        },\n        allPurchaseRequestsChecked: function () {\n            var purchaseRequestIDs = _.map(this.purchaseRequests, function (request) {\n                return request.id\n            });\n            var lineItemIDs = _.map(this.lineItems, function (item) {\n                return item.id\n            });\n            return _.intersection(lineItemIDs, purchaseRequestIDs).length === purchaseRequestIDs.length;\n        }\n    },\n    methods: {\n        fetchPurchaseRequests: function (page) {\n            var self = this;\n            page = page || 1;\n\n            var url = '/api/purchase_requests?' +\n                'state=open' +\n                '&quantity=1+' +\n                '&project_id=' + self.projectID +\n                '&sort=' + self.sort +\n                '&order=' + self.order +\n                '&per_page=8' +\n                '&search=' + self.searchTerm;\n\n            if (page) url += '&page=' + page;\n\n            if (!self.ajaxReady) return;\n            self.ajaxReady = false;\n            self.ajaxObject = $.ajax({\n                url: url,\n                method: 'GET',\n                success: function (response) {\n                    // Update data\n                    self.response = response;\n\n                    self.purchaseRequests = _.omit(response.data, 'query_parameters');\n\n                    // Pull flags from response (better than parsing url)\n                    self.sort = response.data.query_parameters.sort;\n                    self.order = response.data.query_parameters.order;\n                    self.urgent = response.data.query_parameters.urgent;\n\n                    self.ajaxReady = true;\n\n                    // self.$nextTick(function() {\n                    //     self.finishLoading = true;\n                    // })\n                    // TODO ::: Add a loader for each request\n\n                },\n                error: function (res, status, req) {\n                    console.log(status);\n                    self.ajaxReady = true;\n                }\n            });\n        },\n        changeSort: function (sort) {\n            if (this.sort === sort) {\n                this.order = (this.order === 'asc') ? 'desc' : 'asc';\n                this.fetchPurchaseRequests();\n            } else {\n                this.sort = sort;\n                this.order = 'asc';\n                this.fetchPurchaseRequests();\n            }\n        },\n        searchPurchaseRequests: _.debounce(function () {\n            var self = this;\n            // If we're still waiting on a response cancel, abort, and fire a new request\n            if (self.ajaxObject && self.ajaxObject.readyState != 4) self.ajaxObject.abort();\n            self.fetchPurchaseRequests();\n        }, 200),\n        clearSearch: function () {\n            this.searchTerm = '';\n            this.searchPurchaseRequests();\n        },\n        selectPR: function (purchaseRequest) {\n            if(this.alreadySelectedPR(purchaseRequest)) {\n                this.lineItems = _.reject(this.lineItems, {id: purchaseRequest.id});\n            } else {\n                var self = this;\n\n                var sameItemLineItem = _.find(self.lineItems, function (lineItem) {\n                    return lineItem.item.id === purchaseRequest.item.id;\n                });\n                this.lineItems.push(purchaseRequest);\n                var index = _.indexOf(self.lineItems, purchaseRequest);\n                if(sameItemLineItem) Vue.set(self.lineItems[index], 'order_price', sameItemLineItem.order_price);\n            }\n        },\n        alreadySelectedPR: function (purchaseRequest) {\n            return _.find(this.lineItems, function (pr) {\n                return pr.id === purchaseRequest.id;\n            });\n        },\n        selectAllPR: function () {\n            var self = this;\n            if (self.allPurchaseRequestsChecked) {\n                _.forEach(self.purchaseRequests, function (request) {\n                    self.lineItems = _.reject(self.lineItems, request);\n                });\n            } else {\n                _.forEach(self.purchaseRequests, function (request) {\n                    if (!self.alreadySelectedPR(request)) self.selectPR(request);\n                });\n            }\n        }\n    },\n    mixins: [modalSinglePR],\n    ready: function() {\n\n        // select a new project -> load relevant PRs\n        this.$watch('projectID', function (val) {\n            if (!val) return;\n            this.fetchPurchaseRequests();\n        });\n\n        // listen to our custom go to page event name\n        vueEventBus.$on('po-submit-pr-page', function (page) {\n            this.fetchPurchaseRequests(page);\n        }.bind(this));\n    }\n});","Vue.component('purchase-order-single', {\n    name: 'purchaseOrderSingle',\n    el: function () {\n        return '#purchase-order-single'\n    },\n    data: function () {\n        return {\n            tableView: 'requests'\n        };\n    },\n    props: ['purchase-order', 'xhr'],\n    computed: {\n        numItems: function () {\n            return this.purchaseOrder.items.length;\n        },\n        numLineItems: function () {\n            return this.purchaseOrder.line_items.length;\n        },\n        numPaidLineItems: function () {\n            return _.filter(this.purchaseOrder.line_items, function (lineItem) {\n                return lineItem.paid;\n            }).length;\n        },\n        numReceivedLineItems: function () {\n            return _.filter(this.purchaseOrder.line_items, function (lineItem) {\n                return lineItem.received;\n            }).length;\n        },\n        numAcceptedLineItems: function () {\n            return _.filter(this.purchaseOrder.line_items, function (lineItem) {\n                return lineItem.accepted;\n            }).length;\n        },\n        numReturnedLineItems: function () {\n            return _.filter(this.purchaseOrder.line_items, function (lineItem) {\n                return lineItem.returned;\n            }).length;\n        }\n    },\n    methods: {\n        changeTable: function (view) {\n            this.tableView = view;\n        },\n        markPaid: function (lineItem) {\n            $.get('/purchase_orders/' + this.purchaseOrder.id + '/line_item/' + lineItem.id + '/paid', function (data) {\n                lineItem.paid = data;\n            });\n        },\n        markAllPaid: function () {\n            var self = this;\n            _.forEach(self.purchaseOrder.line_items, function (lineItem) {\n                self.markPaid(lineItem);\n            });\n        }\n    },\n    events: {},\n    mixins: [userCompany, numberFormatter],\n    ready: function () {\n    }\n});","Vue.component('po-submit-summary', {\n    name: 'summary',\n    template: '<div class=\"summary table-responsive\">' +\n    '<table class=\"table table-standard table-summary\">' +\n    '<tbody>' +\n    '<tr>' +\n    '<td class=\"col-title\">Subtotal</td>' +\n    '<td class=\"col-amount\">{{ formatNumber(orderSubtotal, currencyDecimalPoints) }}</td>' +\n    '<td class=\"col-currency\">{{ currencySymbol }}</td>' +\n    '</tr>' +\n    '<template v-for=\"cost in additionalCosts\">' +\n    '<tr class=\"row-added-costs\">' +\n    '<td class=\"col-title\">' +\n    '{{ cost.name }}' +\n    '<button type=\"button\" class=\"close\" aria-label=\"Close\" @click=\"removeAdditionalCost(cost)\"><span aria-hidden=\"true\">&times;</span></button>' +\n    '</td>' +\n    '<td class=\"col-amount\">{{ formatNumber(cost.amount, currencyDecimalPoints) }}</td>' +\n    '<td class=\"col-currency\">{{ cost.type }}</td>' +\n    '</tr>' +\n    '</template>' +\n    '<tr class=\"row-inputs\">' +\n    '<td class=\"col-title\">' +\n    '<input type=\"text\" class=\"form-control\" placeholder=\"cost / discount\" v-model=\"newCost.name\">' +\n    '</td>' +\n    '<td class=\"col-amount\">' +\n    '<number-input :model.sync=\"newCost.amount\" :placeholder=\"' + \"'amount'\" + '\" :class=\"[' + \"'form-control'\" + ']\"></number-input>' +\n    '</td>' +\n    '<td class=\"col-currency\">' +\n    '<select-picker :options=\"[{value:' + \"'%', label: '%'\" + '}, {value: currencySymbol, label: currencySymbol }]\" :name.sync=\"newCost.type\"></select-picker>' +\n    '</td>' +\n    '</tr>' +\n    '<tr v-show=\"canAddNewCost\" class=\"row-add-button\">' +\n    '<td></td>' +\n    '<td></td>' +\n    '<td>' +\n    '<button type=\"button\" class=\"btn btn-small btn-add-cost btn-outline-blue\" @click=\"addAdditionalCost\"><i class=\"fa fa-plus\"></i> Cost / Discount</button></td>' +\n    '</tr>' +\n    '<tr class=\"row-total\">' +\n    '<td class=\"col-title\">Total Cost</td>' +\n    '<td class=\"col-amount\">{{ formatNumber(orderTotal, currencyDecimalPoints) }}</td>' +\n    '<td class=\"col-currency\">{{ currencySymbol }}</td>' +\n    '</tr>' +\n    '</tbody>' +\n    '</table>' +\n    '</div>',\n    data: function () {\n        return {\n            newCost: {\n                name: '',\n                type: '%',\n                amonut: ''\n            }\n        };\n    },\n    props: ['line-items', 'additional-costs', 'currency-symbol', 'currency-decimal-points'],\n    computed: {\n        orderSubtotal: function () {\n            var self = this;\n            var subtotal = 0;\n            if (!self.lineItems.length > 0) return;\n            _.forEach(self.lineItems, function (item) {\n                if (item.order_quantity && item.order_price && isNumeric(item.order_quantity) && isNumeric(item.order_price)) subtotal += (item.order_quantity * item.order_price);\n            });\n            return subtotal;\n        },\n        canAddNewCost: function () {\n            return this.newCost.name && this.newCost.amount && this.newCost.type;\n        },\n        orderTotal: function () {\n            var subtotal = this.orderSubtotal;\n            var total = subtotal;\n            _.forEach(this.additionalCosts, function (cost) {\n                var amount = parseFloat(cost.amount);\n                if (cost.type == '%') {\n\n                    // Calculate the percentage off the sub-total NOT running total. This implies\n                    // that other additional costs are NOT taxable. If user wants to include\n                    // taxable costs, add as separate additional costs / discounts.\n\n                    total += (subtotal * amount / 100);\n                } else {\n                    total += amount;\n                }\n            });\n            return total;\n        }\n    },\n    methods: {\n        removeAdditionalCost: function (cost) {\n            this.additionalCosts = _.reject(this.additionalCosts, cost);\n        },\n        addAdditionalCost: function () {\n            this.additionalCosts.push(this.newCost);\n            this.newCost = {\n                name: '',\n                type: '%',\n                amonut: ''\n            }\n        }\n    },\n    events: {},\n    mixins: [numberFormatter],\n    ready: function () {\n    }\n});","Vue.component('pr-single-cancel', {\n    name: 'cancelPR',\n    template: '<div class=\"state-control\">' +\n    '<div class=\"cancel-pr\" v-if=\"purchaseRequest.state === ' + \"'open'\" + '\">' +\n    '<button type=\"button\" class=\"btn btn-small btn-outline-red btn-show-confirm-cancel\" @click=\"toggleConfirm\" v-show=\"! showConfirm\">Cancel</button>' +\n    '<div class=\"confirm-cancel\" v-show=\"showConfirm\">' +\n    '<p>Cancelling this request will only apply to outstanding quantities only. Fulfilled amounts cannot be cancelled.</p>' +\n    '<button type=\"button\" class=\"btn btn-outline-grey btn-return\" @click=\"toggleConfirm\">Return</button>' +\n    '<button type=\"button\" class=\"btn btn-solid-red btn-cancel\" @click=\"sendRequest(' + \"'cancel'\" + ')\">Yes, cancel with {{ purchaseRequest.quantity }} quantities outstanding</button>' +\n    '</div>' +\n    '</div>' +\n    '<div class=\"uncancel-pr\"  v-if=\"purchaseRequest.state === ' + \"'cancelled'\" + '\">' +\n    '<button type=\"button\" class=\"btn btn-solid-blue\" @click=\"sendRequest(' + \"'reopen'\" + ')\">Reopen Request</button>' +\n    '</div>'+\n    '</div>',\n    data: function () {\n        return {\n            ajaxReady: true,\n            showConfirm: false\n        };\n    },\n    props: ['purchase-request'],\n    computed: {},\n    methods: {\n        toggleConfirm: function() {\n            this.showConfirm = !this.showConfirm;\n        },\n        sendRequest: function(action) {\n\n            var method = 'DELETE';\n            var url = '/purchase_requests/' + this.purchaseRequest.id;\n\n            if(action === 'reopen') {\n                method = 'GET';\n                url += '/reopen';\n            }\n\n            var self = this;\n            if(!self.ajaxReady) return;\n            self.ajaxReady = false;\n            $.ajax({\n                url: url,\n                method: method,\n                success: function(data) {\n                    location.reload();\n                },\n                error: function(response) {\n                    console.log(response);\n                    self.ajaxReady = true;\n                }\n            });\n        }\n    },\n    events: {},\n    ready: function () {\n\n    }\n});","Vue.component('settings-billing', {\n    name: 'settingsBillingPage',\n    el: function() {\n        return '#settings-billing'\n    },\n    data: function() {\n        return {\n            ajaxReady: true,\n            showCreditCardForm: false\n        };\n    },\n    props: [],\n    computed: {\n    },\n    methods: {\n        toggleCreditCardForm: function() {\n            this.showCreditCardForm = !this.showCreditCardForm;\n        },\n        activateNewSubscription: function(creditCardToken) {\n            var self = this;\n            if(!self.ajaxReady) return;\n            self.ajaxReady = false;\n            $.ajax({\n                url: '/subscription/new',\n                method: 'POST',\n                data: {\n                    \"credit_card_token\": creditCardToken\n                },\n                success: function(data) {\n                   // success\n                    location.reload();\n                   self.ajaxReady = true;\n                },\n                error: function(response) {\n                    console.log(response);\n                    flashNotify('error', 'Could not activate subscription');\n                    self.ajaxReady = true;\n                }\n            });\n        }\n    },\n    events: {\n        \n    },\n    ready: function() {\n        vueEventBus.$on('new-cc-token', function (creditCardToken) {\n            this.activateNewSubscription(creditCardToken);\n        }.bind(this));\n    }\n});","Vue.component('settings-company', {\n    name: 'settingsCompany',\n    template: '',\n    el: function () {\n        return '#settings-company';\n    },\n    data: function () {\n        return {\n            ajaxReady: true,\n            company: false,\n            selectedCurrency: '',\n            currencyDecimalPointsOptions: [\n                {\n                    value: \"0\",\n                    label: \"0\"\n                },\n                {\n                    value: 1,\n                    label: 1\n                },\n                {\n                    value: 2,\n                    label: 2\n                },\n                {\n                    value: 3,\n                    label: 3\n                }\n            ]\n        }\n    },\n    props: [\n        'settingsView'\n    ],\n    computed: {\n        canUpdateCompany: function () {\n            if (this.user) return this.user.company.name;\n            return false;\n        },\n        currencyDecimalPoints: function () {\n            return this.user.company.settings.currency_decimal_points;\n        },\n        canAddCurrency: function () {\n            return this.selectedCurrency && !_.find(this.availableCurrencies, {id: this.selectedCurrency.id});\n        }\n    },\n    methods: {\n        updateCompany: function () {\n            var self = this;\n            vueClearValidationErrors(self);\n            if (!self.ajaxReady) return;\n            self.ajaxReady = false;\n            $.ajax({\n                url: '/company',\n                method: 'PUT',\n                data: {\n                    name: self.user.company.name,\n                    description: self.user.company.description,\n                    currency_id: self.user.company.settings.currency_id,\n                    currency_decimal_points: self.user.company.settings.currency_decimal_points\n                },\n                success: function (data) {\n                    // success\n                    flashNotify('success', 'Updated Company information');\n                    self.ajaxReady = true;\n                },\n                error: function (response) {\n                    console.log('Request Error!');\n                    console.log(response);\n                    vueValidation(response, self);\n                    self.ajaxReady = true;\n                }\n            });\n        },\n        addCurrency: function () {\n            var self = this;\n            if (!self.ajaxReady) return;\n            self.ajaxReady = false;\n            $.ajax({\n                url: '/company/currencies',\n                method: 'POST',\n                data: {\n                    \"currency_id\": self.selectedCurrency.id\n                },\n                success: function (data) {\n                    self.selectedCurrency = '';\n                    self.user.company = data;\n                    self.ajaxReady = true;\n                    vueEventBus.$emit('updated-company-currency');\n                },\n                error: function (response) {\n                    self.selectedCurrency = '';\n                    self.ajaxReady = true;\n                }\n            });\n        },\n        removeCurrency: function(currency) {\n            var self = this;\n            if(!self.ajaxReady) return;\n            self.ajaxReady = false;\n            $.ajax({\n                url: '/company/currencies/' + currency.id,\n                method: 'DELETE',\n                success: function(data) {\n                    self.user.company = data;\n                   self.ajaxReady = true;\n                    vueEventBus.$emit('updated-company-currency');\n                },\n                error: function(response) {\n                    console.log(response);\n                    self.ajaxReady = true;\n                }\n            });\n        }\n    },\n    mixins: [userCompany],\n    ready: function () {\n        var self = this;\n    }\n});","Vue.component('settings-permissions', {\n    name: 'settingsPermissions',\n    el: function () {\n        return '#settings-permissions'\n    },\n    data: function () {\n        return {\n            ajaxReady: true,\n            roles: [],\n            roleToRemove: false,\n            roleSelect: '',\n            selectedRole: false,\n            editingRole: false,\n            editRolePosition: false,\n            roleToUpdate: {},\n            updatedRoleVal: ''\n        };\n    },\n    computed: {},\n    methods: {\n        hasPermission: function (permission, role) {\n            return _.some(role.permissions, permission);\n        },\n        removePermission: function (permission, role) {\n            var self = this;\n            $.ajax({\n                url: '/api/roles/remove_permission',\n                method: 'POST',\n                data: {\n                    role: role,\n                    permission: permission\n                },\n                success: function () {\n                    // remove role from roles\n                    self.roles = _.reject(self.roles, role);\n                    // modify role\n                    role.permissions = _.reject(role.permissions, permission);\n                    // Add role back to roles\n                    self.roles.push(role);\n                },\n                error: function (response) {\n                    // error\n                    console.log('GET REQ Error!');\n                    console.log(response);\n                }\n            });\n        },\n        givePermission: function (permission, role) {\n            var self = this;\n            $.ajax({\n                url: '/api/roles/give_permission',\n                method: 'POST',\n                data: {\n                    role: role,\n                    permission: permission\n                },\n                success: function () {\n                    self.roles = _.reject(self.roles, role);\n                    role.permissions.push(permission);\n                    self.roles.push(role)\n                },\n                error: function (response) {\n                    // error\n                    console.log('GET REQ Error!');\n                    console.log(response);\n                }\n            });\n        },\n        addRole: function () {\n            var newRole = {};\n        },\n        setRemoveRole: function (role) {\n            this.$broadcast('new-modal', {\n                title: 'Permanently Remove ' + strCapitalize(role.position),\n                body: \"Removing a role is irreversible. Any team members that have those roles will lose all their permissions and won't be able to complete any tasks until you assign them a new role.\",\n                buttonClass: 'btn-danger',\n                buttonText: 'remove',\n                callbackEventName: 'remove-role'\n            });\n            this.roleToRemove = role;\n        },\n        removeRole: function () {\n            var self = this;\n            if (!self.ajaxReady) return;\n            self.ajaxReady = false;\n            $.ajax({\n                url: '/api/roles/delete',\n                method: 'POST',\n                data: {\n                    role: self.roleToRemove\n                },\n                success: function (data) {\n                    // success\n                    self.roles = _.reject(self.roles, self.roleToRemove);\n                    // Remove from selectbox\n                    self.roleSelect.removeOption(self.roleToRemove.position);\n                    self.roleSelect.removeItem(self.roleToRemove.position, false);\n                    self.selectedRole = false;\n                    self.ajaxReady = true;\n                },\n                error: function (response) {\n                    console.log('Error removing Role');\n                    if(response.status === 406) flashNotify('error', 'Can not remove Role with assigned Staff');\n                    self.ajaxReady = true;\n                }\n            });\n        },\n        editRole: function (role) {\n            var self = this;\n            self.editingRole = role;\n            self.editRolePosition = role.position;\n            self.$nextTick(function () {\n                var $inputEdit = $('.input-editing-role');\n                $inputEdit.focus();\n                var blurFired = false; // blur fired flag\n                $inputEdit.keypress(function (e) {\n                    if (e.which == 13) {\n                        this.blur();\n                    }\n                });\n                $inputEdit.blur(function () {\n                    var newRoleVal = $inputEdit.val().toLowerCase();\n                    if (blurFired) return;\n                    blurFired = true;\n                    if (newRoleVal !== role.position && newRoleVal.length !== 0) {\n                        self.confirmEdit(role, newRoleVal);\n                    }\n                    self.editingRole = false;\n                    self.editRolePosition = false;\n\n                });\n            });\n\n        },\n        notEditing: function (role) {\n            return role !== this.editingRole;\n        },\n        confirmEdit: function (oldRole, newRoleVal) {\n            this.roleToUpdate = oldRole;\n            this.updatedRoleVal = newRoleVal;\n            this.$broadcast('new-modal', {\n                title: 'Confirm Edit ' + strCapitalize(this.editingRole.position) + ' to ' + strCapitalize(newRoleVal),\n                body: 'Role changes are immediate and will automatically effect all team members that have the role.',\n                buttonClass: 'btn-primary',\n                buttonText: 'update',\n                callbackEventName: 'update-role'\n            });\n        },\n        updateRole: function () {\n            var self = this;\n            $.ajax({\n                url: '/api/roles/' + self.roleToUpdate.id,\n                method: 'PUT',\n                data: {\n                    role: self.roleToUpdate,\n                    newPosition: self.updatedRoleVal\n                },\n                success: function (role) {\n                    self.roles = _.reject(self.roles, self.roleToUpdate);\n                    self.roles.push(role);\n\n                    self.roleSelect.updateOption(self.roleToUpdate.position, {\n                        value: role.position,\n                        text: strCapitalize(role.position)\n                    });\n\n                    // select new option\n                    if (self.selectedRole.position === self.roleToUpdate.position) self.selectedRole = role;\n                },\n                error: function (response) {\n                    console.log('Request Error!');\n                    console.log(response);\n                }\n            });\n        }\n    },\n    events: {\n        'remove-role': function () {\n            this.removeRole();\n        },\n        'update-role': function () {\n            this.updateRole();\n        }\n    },\n    ready: function () {\n        var self = this;\n\n        // GET company roles\n        $.ajax({\n            url: '/api/roles',\n            method: 'GET',\n            success: function (data) {\n                self.roles = data;\n            },\n            error: function (err) {\n                console.log(err);\n            }\n        });\n\n        var $addRoleLink = $('#link-add-role');\n\n        $addRoleLink.editable({\n            type: 'text',\n            mode: 'inline',\n            showbuttons: false,\n            placeholder: 'Position Title'\n        });\n\n        $addRoleLink.on('shown', function () {\n            setTimeout(function () {\n                $addRoleLink.editable('setValue', '');\n            }, 0);\n        });\n\n        $addRoleLink.on('hidden', function (e, reason) {\n            $addRoleLink.editable('setValue', 'Add New Role');\n        });\n\n        function saveRole(position, successFn, errorFn) {\n            if (!self.ajaxReady) return;\n            self.ajaxReady = false;\n            $.ajax({\n                url: '/api/roles',\n                method: 'POST',\n                data: {\n                    position: position\n                },\n                success: function (data) {\n                    self.roles.push(data);\n                    successFn ? successFn() : null;\n                    self.ajaxReady = true;\n                },\n                error: function (res) {\n                    console.log('Error: saving new role');\n                    console.log(res);\n                    errorFn ? errorFn() : null;\n                    self.ajaxReady = true;\n                }\n            });\n        }\n\n        self.roleSelect = uniqueSelectize('#select-settings-role', 'Select or type to add a new role');\n\n        $addRoleLink.on('save', function (e, params) {\n            self.roleSelect.addOption({\n                value: params.newValue,\n                text: params.newValue\n            });\n        });\n\n        self.roleSelect.on(\"option_add\", function (value, $item) {\n            self.roleSelect.updateOption(value, {\n                value: value,\n                text: strCapitalize(value)\n            });\n\n            saveRole(value, function () {\n                // success\n                self.selectedRole = _.find(self.roles, {position: value});\n            }, function () {\n                // error:\n                self.roleSelect.removeOption(value);\n            });\n        });\n\n        self.roleSelect.on(\"item_add\", function (value, $item) {\n            self.selectedRole = _.find(self.roles, {position: value});\n        });\n    }\n});\n","Vue.component('settings-roles', {\n    name: 'settingsRoles',\n    el: function() {\n        return '#settings-roles'\n    },\n    data: function() {\n        return {\n            ajaxReady: true,\n            showAddNewRoleForm: false,\n            showModal: false,\n            editingRole: false,\n            selectedRole: '',\n            newRole: ''\n        };\n    },\n    props: ['roles', 'permissions'],\n    computed: {\n\n    },\n    methods: {\n        toggleAddNewRoleForm: function() {\n            this.newRole = '';\n            this.showAddNewRoleForm = !this.showAddNewRoleForm;\n        },\n        addRole: function() {\n            var self = this;\n            if(!self.ajaxReady) return;\n            self.ajaxReady = false;\n            $.ajax({\n                url: '/api/roles',\n                method: 'POST',\n                data: {\n                    position: self.newRole\n                },\n                success: function (data) {\n                    self.roles.push(data);\n                    self.newRole = '';\n                    flashNotify('success', 'Saved new role');\n                    self.ajaxReady = true;\n                    self.toggleAddNewRoleForm();\n                },\n                error: function (res) {\n                    flashNotify('error', 'Could not add role');\n                    console.log(res);\n                    self.ajaxReady = true;\n                }\n            });\n        },\n        launchRoleModal: function(role) {\n            this.selectedRole = role;\n            this.showModal = true;\n        },\n        hideModal: function() {\n            this.showModal = false;\n        },\n        enterEditMode: function() {\n            this.editingRole = true;\n            this.$nextTick(function () {\n                $(this.$els.inputRole).focus();\n            }.bind(this));\n        },\n        exitEditMode: function() {\n            var self = this;\n            $.ajax({\n                url: '/api/roles/' + self.selectedRole.id,\n                method: 'PUT',\n                data: {\n                    role: self.selectedRole,\n                    newPosition: self.selectedRole.position\n                },\n                success: function () {\n                    self.editingRole = false;\n                },\n                error: function (response) {\n                    console.log('Request Error!');\n                    console.log(response);\n                }\n            });\n        },\n        hasPermission: function (permission, role) {\n            return _.some(role.permissions, permission);\n        },\n        removePermission: function (permission, role) {\n            var self = this;\n            $.ajax({\n                url: '/api/roles/remove_permission',\n                method: 'POST',\n                data: {\n                    role: role,\n                    permission: permission\n                },\n                success: function () {\n                    // remove role from roles\n                    self.roles = _.reject(self.roles, role);\n                    // modify role\n                    role.permissions = _.reject(role.permissions, permission);\n                    // Add role back to roles\n                    self.roles.push(role);\n                },\n                error: function (response) {\n                    // error\n                    console.log('GET REQ Error!');\n                    console.log(response);\n                }\n            });\n        },\n        givePermission: function (permission, role) {\n            var self = this;\n            $.ajax({\n                url: '/api/roles/give_permission',\n                method: 'POST',\n                data: {\n                    role: role,\n                    permission: permission\n                },\n                success: function () {\n                    self.roles = _.reject(self.roles, role);\n                    role.permissions.push(permission);\n                    self.roles.push(role)\n                },\n                error: function (response) {\n                    // error\n                    console.log('GET REQ Error!');\n                    console.log(response);\n                }\n            });\n        },\n        removeRole: function() {\n            var self = this;\n            if (!self.ajaxReady) return;\n            self.ajaxReady = false;\n            $.ajax({\n                url: '/api/roles/' + self.selectedRole.id,\n                method: 'DELETE',\n                success: function (data) {\n                    // success\n                    self.roles = _.reject(self.roles, self.selectedRole);\n                    self.showModal = false;\n                    flashNotify('success', 'Removed role: ' + self.selectedRole.position);\n                    self.selectedRole = '';\n                    self.ajaxReady = true;\n                },\n                error: function (response) {\n                    console.log('Error removing Role');\n                    self.ajaxReady = true;\n                }\n            });\n        }\n    },\n    events: {\n\n    },\n    ready: function() {\n\n    }\n});","Vue.component('settings-rules', {\n    name: 'settingsRules',\n    el: function () {\n        return '#settings-rules'\n    },\n    data: function () {\n        return {\n            ajaxReady: true,\n            selectedProperty: false,\n            selectedTrigger: false,\n            selectedRuleRoles: [],\n            ruleLimit: '',\n            currency: '',\n            ruleToRemove: false,\n            selectedRule: '',\n            confirmDelete: false\n        };\n    },\n    props: [\n        'user', 'rules', 'rule-properties'\n    ],\n    computed: {\n        ruleHasLimit: function () {\n            return (this.selectedTrigger && this.selectedTrigger.has_limit);\n        },\n        canSubmitRule: function () {\n\n            var valid = true;\n\n            if (!this.selectedProperty) valid = false;\n\n            if (!this.selectedTrigger) valid = false;\n\n            if (!this.selectedRuleRoles || !this.selectedRuleRoles.length > 0) valid = false;\n\n            if (this.ruleHasLimit && !this.ruleLimit > 0) valid = false;\n\n            if (this.selectedTrigger.has_currency && !this.currency.id) valid = false;\n\n            return valid;\n\n        },\n        hasRules: function () {\n            return !_.isEmpty(this.rules);\n        },\n        sortedRules: function() {\n            return _.sortBy(this.rules, function(rule) { return rule.rule_property_id; });\n        }\n    },\n    methods: {\n        setTriggers: function () {\n            this.selectedTrigger = '';\n        },\n        addRule: function () {\n            var self = this;\n            vueClearValidationErrors(self);\n            var postData = {\n                rule_property_id: self.selectedProperty.id,\n                rule_trigger_id: self.selectedTrigger.id,\n                has_limit: self.selectedTrigger.has_limit,\n                limit: self.ruleLimit,\n                has_currency: self.selectedTrigger.has_currency,\n                currency_id: self.currency.id,\n                roles: self.selectedRuleRoles\n            };\n            $.ajax({\n                url: '/api/rules',\n                method: 'POST',\n                data: postData,\n                success: function (data) {\n                    self.rules.push(data);\n                    flashNotify('success', 'Added new rule');\n                    self.resetRuleValues();\n                },\n                error: function (response) {\n                    console.log(response);\n                    vueValidation(response, self);\n                    self.resetRuleValues();\n                    flashNotify('error', 'Could not add rule');\n                }\n            });\n        },\n        resetRuleValues: function () {\n            this.ruleLimit = '';\n            this.selectedRuleRoles = [];\n        },\n        setRemoveRule: function (rule) {\n            this.ruleToRemove = rule;\n            this.$broadcast('new-modal', {\n                title: 'Confirm Remove Rule',\n                body: \"Removing a rule is irreversible. Any Pending (Unapproved) Purchase Orders that is waiting for the Rule to be approved may automatically be approved for processing.\",\n                buttonClass: 'btn-danger',\n                buttonText: 'remove',\n                callbackEventName: 'remove-rule'\n            });\n        },\n        removeRule: function () {\n            var self = this;\n            if (!self.ajaxReady) return;\n            self.ajaxReady = false;\n            $.ajax({\n                url: '/api/rules/' + self.selectedRule.id,\n                method: 'DELETE',\n                success: function (data) {\n                    // success\n                    self.rules = _.reject(self.rules, self.selectedRule);\n                    self.selectedRule = '';\n                    self.confirmDelete = false;\n                    flashNotify('info', 'Removed rule');\n                    self.ajaxReady = true;\n                },\n                error: function (response) {\n                    console.log('Request Error!');\n                    console.log(response);\n                    self.ajaxReady = true;\n                }\n            });\n        },\n        showRule: function(rule) {\n            this.selectedRule = rule;\n        },\n        hideModal: function() {\n            this.selectedRule = '';\n            self.confirmDelete = false;\n        },\n        toggleConfirmDelete: function() {\n            this.confirmDelete = ! this.confirmDelete;\n        }\n    },\n    events: {\n        'remove-rule': function () {\n            this.removeRule();\n        }\n    },\n    mixins: [userCompany],\n    ready: function () {\n    }\n});","Vue.component('report-spendings-employees', spendingsReport.extend({\n    name: 'ReportSpendingsForVendors',\n    el: function() {\n        return '#report-spendings-employees'\n    },\n    computed: {\n        dataURL: function() {\n            var url = '/reports/spendings/employees/currency/' + this.currencyId;\n            if(this.dateMin || this.dateMax) url += '?date=' + this.dateMin + '+' + this.dateMax;\n            return url;\n        },\n        title: function() {\n            return 'Employee Spendings for ' + this.currency.code;\n        }\n    }\n}));","Vue.component('report-spendings-items', spendingsReport.extend({\n    name: 'ReportSpendingsForVendors',\n    el: function() {\n        return '#report-spendings-items'\n    },\n    computed: {\n        dataURL: function() {\n            var url = '/reports/spendings/items/currency/' + this.currencyId;\n            if(this.dateMin || this.dateMax) url += '?date=' + this.dateMin + '+' + this.dateMax;\n            return url;\n        },\n        title: function() {\n            return 'Item Spendings for ' + this.currency.code;\n        }\n    }\n}));","Vue.component('report-spendings-projects', spendingsReport.extend({\n    name: 'ReportSpendingsForProjects',\n    el: function() {\n        return '#report-spendings-projects'\n    },\n    computed: {\n        dataURL: function() {\n            var url = '/reports/spendings/projects/currency/' + this.currencyId;\n            if(this.dateMin || this.dateMax) url += '?date=' + this.dateMin + '+' + this.dateMax;\n            return url;\n        },\n        title: function() {\n            return 'Project Spendings for ' + this.currency.code;\n        }\n    }\n}));","Vue.component('report-spendings-vendors', spendingsReport.extend({\n    name: 'ReportSpendingsForVendors',\n    el: function() {\n        return '#report-spendings-vendors'\n    },\n    computed: {\n        dataURL: function() {\n            var url = '/reports/spendings/vendors/currency/' + this.currencyId;\n            if(this.dateMin || this.dateMax) url += '?date=' + this.dateMin + '+' + this.dateMax;\n            return url;\n        },\n        title: function() {\n            return 'Vendor Spendings for ' + this.currency.code;\n        }\n    }\n}));","Vue.component('add-bank-account-modal', {\n    name: 'add-bank-account-modal',\n    template: '<button type=\"button\"' +\n    '               class=\"btn btn-add-modal btn-outline-blue btn-add-bank-account\"' +\n    '               @click=\"showModal\"' +\n    '          >' +\n    '          <i class=\"fa fa-plus\"></i> Account' +\n    '</button>' +\n    '          <div class=\"modal-bank-account-add modal-form modal-overlay\" v-show=\"visible\" @click=\"hideModal\">' +\n    '               <form class=\"form-add-bank-account main-form modal-body\" @click.stop=\"\" @submit.prevent=\"addBankAccount\">' +\n    '                   <form-errors></form-errors>' +\n    '                   <h2>Add Bank Account</h2>'+\n    '                   <div class=\"account_info\">'+\n    '                       <label>Account Information</label>'+\n    '                       <div class=\"row\">'+\n    '                           <div class=\"col-xs-6\">'+\n    '                               <div class=\"shift-label-input no-validate\">'+\n    '                                   <input type=\"text\" v-model=\"accountName\" required>'+\n    '                                   <label placeholder=\"Account Name\" class=\"required\"></label>'+\n    '                               </div>'+\n    '                           </div>'+\n    '                           <div class=\"col-xs-6\">'+\n    '                               <div class=\"shift-label-input no-validate\">'+\n    '                                   <input type=\"text\" v-model=\"accountNumber\" required>'+\n    '                                   <label placeholder=\"# Number\" class=\"required\"></label>'+\n    '                               </div>'+\n    '                           </div>'+\n    '                       </div>'+\n    '                   </div>'+\n    '                   <div class=\"bank_info\">'+\n    '                       <label>Bank Details</label>'+\n    '                       <div class=\"visible-xs\">'+\n    '                           <div class=\"shift-label-input no-validate\">'+\n    '                               <input type=\"text\" v-model=\"bankName\" required>'+\n    '                               <label placeholder=\"Bank Name\" class=\"required\"></label>'+\n    '                           </div>'+\n    '                       </div>'+\n    '                       <div class=\"row hidden-xs\">'+\n    '                           <div class=\"col-sm-4\">'+\n    '                               <div class=\"shift-label-input no-validate\">'+\n    '                                   <input type=\"text\" v-model=\"bankName\" required>'+\n    '                                   <label placeholder=\"Bank Name\" class=\"required\"></label>'+\n    '                               </div>'+\n    '                           </div>'+\n    '                           <div class=\"col-sm-4\">'+\n    '                               <div class=\"shift-label-input no-validate\">'+\n    '                                   <input type=\"text\" ' +\n    '                                       class=\"not-required\"'+\n    '                                       v-model=\"swift\" ' +\n    '                                       :class=\"{'+\n    \"                                           'filled': swift.length > 0\"+\n    '                                       }\">'+\n    '                                   <label placeholder=\"SWIFT / IBAN\"></label>'+\n    '                               </div>'+\n    '                           </div>'+\n    '                           <div class=\"col-sm-4\">'+\n    '                               <div class=\"shift-label-input no-validate\">'+\n    '                                   <input type=\"text\" ' +\n    '                                       class=\"not-required\" ' +\n    '                                       v-model=\"bankPhone\" ' +\n    '                                       :class=\"{'+\n    \"                                           'filled': bankPhone.length > 0\"+\n    '                                       }\">'+\n    '                                   <label placeholder=\"Phone Number\"></label>'+\n    '                               </div>'+\n    '                           </div>'+\n    '                  </div>'+\n    '                  <div class=\"row visible-xs\">'+\n    '                       <div class=\"col-xs-6\">'+\n    '                           <div class=\"shift-label-input no-validate\">'+\n    '                               <input type=\"text\" ' +\n    '                                      class=\"not-required\"'+\n    '                                      v-model=\"swift\" ' +\n    '                                      :class=\"{' +\n    \"                                           'filled': swift.length > 0\"+\n    '                                       }\">'+\n    '                               <label placeholder=\"SWIFT / IBAN\"></label>'+\n    '                           </div>'+\n    '                      </div>'+\n    '                      <div class=\"col-xs-6\">'+\n    '                           <div class=\"shift-label-input no-validate\">'+\n    '                               <input type=\"text\" ' +\n    '                                      class=\"not-required\" ' +\n    '                                      v-model=\"bankPhone\" ' +\n    '                                      :class=\"{' +\n    \"                                           'filled': bankPhone.length > 0 \"+\n    '                                       }\">'+\n    '                                       <label placeholder=\"Phone Number\"></label>' +\n    '                           </div>'+\n    '                       </div>'+\n    '                </div>'+\n    '                <div class=\"shift-label-input no-validate\">'+\n    '                       <input type=\"text\" ' +\n    '                              class=\"not-required\" ' +\n    '                              v-model=\"bankAddress\" ' +\n    '                               :class=\"{'+\n    \"                                   'filled': bankAddress.length > 0\" +\n    '                               }\">'+\n    '                       <label placeholder=\"Address\"></label>'+\n    '               </div>'+\n    '           </div>'+\n    '           <div class=\"align-end\">'+\n    '               <button type=\"submit\" class=\"btn btn-solid-blue\">Save</button>'+\n    '           </div>'+\n    '       </form>' +\n    ' </div>',\n    data: function() {\n        return {\n            ajaxReady: true,\n            ajaxObject: {},\n            visible: false,\n            accountName: '',\n            accountNumber: '',\n            bankName: '',\n            swift: '',\n            bankPhone: '',\n            bankAddress: ''\n        };\n    },\n    props: ['vendor'],\n    computed: {\n        \n    },\n    methods: {\n        showModal: function () {\n            this.visible = true;\n        },\n        hideModal: function () {\n            this.visible = false;\n        },\n        addBankAccount: function () {\n            var self = this;\n            vueClearValidationErrors(self);\n            if (!self.ajaxReady) return;\n            self.ajaxReady = false;\n            $.ajax({\n                url: '/vendors/' + self.vendor.id + '/bank_accounts',\n                method: 'POST',\n                data: {\n                    \"account_name\": self.accountName,\n                    \"account_number\": self.accountNumber,\n                    \"bank_name\": self.bankName,\n                    \"swift\": self.swift,\n                    \"bank_phone\": self.bankPhone,\n                    \"bank_address\": self.bankAddress\n                },\n                success: function (data) {\n                    // Push to front\n                    self.vendor.bank_accounts.push(data);\n                    // Reset Fields\n                    self.accountName = '';\n                    self.accountNumber = '';\n                    self.bankName = '';\n                    self.swift = '';\n                    self.bankPhone = '';\n                    self.bankAddres = '';\n                    // Flash\n                    flashNotify('success', 'Added bank account to vendor');\n                    self.visible = false;\n                    self.ajaxReady = true;\n                },\n                error: function (response) {\n                    flashNotify('error', 'Could not add bank account to vendor')\n                    vueValidation(response, self);\n                    self.ajaxReady = true;\n                }\n            });\n        },\n    },\n    events: {\n        \n    },\n    ready: function() {\n        \n    }\n});","Vue.component('spendings-employees-chart', baseChart.extend({\n    name: 'spendingsChartForEmployees',\n    data: function() {\n        return {\n            mode: 'data',\n            chartLabel: 'Employees',\n            theme: 'green'\n        };\n    },\n    props: ['chart-data']\n}));","Vue.component('spendings-items-chart', baseChart.extend({\n    name: 'spendingsChartForItems',\n    data: function() {\n        return {\n            mode: 'data',\n            chartLabel: 'Items',\n            theme: 'blue'\n        };\n    },\n    props: ['chart-data']\n}));","Vue.component('spendings-projects-chart', baseChart.extend({\n    name: 'spendingsChartForProjects',\n    data: function() {\n        return {\n            mode: 'data',\n            chartLabel: 'Projects',\n            theme: 'blue'\n        };\n    },\n    props: ['chart-data']\n}));","Vue.component('spendings-vendors-chart', baseChart.extend({\n    name: 'spendingsChartForVendors',\n    data: function() {\n        return {\n            mode: 'data',\n            chartLabel: 'Vendors',\n            theme: 'red'\n        };\n    },\n    props: ['chart-data']\n}));"],"sourceRoot":"/source/"}