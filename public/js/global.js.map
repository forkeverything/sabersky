{"version":3,"sources":["helpers.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"global.js","sourcesContent":["\n/**\n * Takes string and capitalizes the first letter\n * of each word.\n */\nfunction strCapitalize(str) {\n    return str.replace(/\\w\\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});\n}\n\n/**\n * Escapes html entities for a string to be inserted\n * into the DOM.\n *\n * @type {{&: string, <: string, >: string, \": string, ': string, /: string}}\n */\nvar entityMap = {\n    \"&\": \"&amp;\",\n    \"<\": \"&lt;\",\n    \">\": \"&gt;\",\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    \"/\": '&#x2F;'\n};\n\n/**\n * Escapes a given string that has HTML elements.\n *\n * @param string\n * @returns {string}\n */\nfunction escapeHtml(string) {\n    return String(string).replace(/[&<>\"'\\/]/g, function (s) {\n        return entityMap[s];\n    });\n}\n\n/**\n * Takes an AJAX response and vue instance\n * and emits form errors to be caught by\n * 'form-errors' Vue Component.\n * \n * @param response\n * @param vue\n */\nfunction vueValidation(response, vue) {\n    if(response.status === 422) {\n        vue.$broadcast('new-errors', response.responseJSON);\n    }\n}"],"sourceRoot":"/source/"}