{"version":3,"sources":["line-items.js","misc.js","purchase-orders.js","purchase-request.js","vue/filters.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["new Vue({\n    name: 'addLineItem',\n    el: '#add-line-item',\n    data: {\n        purchaseRequests: [],\n        selectedPurchaseRequest: '',\n        quantity: '',\n        price: '',\n        payable: '',\n        delivery: '',\n        canAjax: true,\n        field: '',\n        order: '',\n        urgent: ''\n    },\n    ready: function() {\n        var self = this;\n        $.ajax({\n            method: 'GET',\n            url: '/purchase_requests/available',\n            success: function(data) {\n                self.purchaseRequests = data;\n            }\n        });\n    },\n    methods: {\n        selectPurchaseRequest: function($selected){\n            this.selectedPurchaseRequest = $selected;\n        },\n        removeSelectedPurchaseRequest: function() {\n            this.selectedPurchaseRequest = '';\n            this.quantity = '';\n            this.price = '';\n            this.payable = '';\n            this.delivery = '';\n        },\n        addLineItem: function() {\n            var self = this;\n            if(self.canAjax) {\n                self.canAjax = false;\n                $.ajax({\n                    url: '/purchase_orders/add_line_item',\n                    method: 'POST',\n                    data: {\n                        purchase_request_id: self.selectedPurchaseRequest.id,\n                        quantity: self.quantity,\n                        price: self.price,\n                        payable: moment(self.payable, \"DD/MM/YYYY\").format(\"YYYY-MM-DD H:mm:ss\"),\n                        delivery: moment(self.delivery, \"DD/MM/YYYY\").format(\"YYYY-MM-DD H:mm:ss\")\n                    },\n                    success: function (data) {\n                        window.location='/purchase_orders/submit';\n                    },\n                    error: function (res, status, error) {\n                        console.log(error);\n                        self.canAjax = true;\n                    }\n                });\n            }\n        },\n        changeSort: function($newField) {\n            if(this.field == $newField) {\n                this.order = (this.order == '') ? -1 : '';\n            } else {\n                this.field = $newField;\n                this.order = ''\n            }\n        },\n        toggleUrgent: function() {\n            this.urgent = (this.urgent) ? '' : 1;\n        }\n    },\n    computed: {\n        subtotal: function() {\n            return this.quantity * this.price;\n        },\n        validQuantity: function() {\n            return (this.selectedPurchaseRequest.quantity >= this.quantity && this.quantity > 0);\n        },\n        canAddPurchaseRequest: function() {\n            return (!! this.selectedPurchaseRequest && !! this.quantity & !! this.price && !! this.payable && !! this.delivery && this.validQuantity)\n        }\n    }\n});\n\n\n","$(document).ready(function () {\n    moment.locale('id'); // 'en'\n    $('.datepicker').datepicker({\n        format: \"dd/mm/yyyy\",\n        startDate: 'today',\n        language: 'id'\n    });\n});\n","new Vue({\n    el: '#purchase-orders-submit',\n    data: {\n        vendorType: '',\n        vendor_id: 'Choose an existing vendor',\n        name: '',\n        phone: '',\n        address: '',\n        bank_account_name: '',\n        bank_account_number: '',\n        bank_name: '',\n        canAjax: true\n    },\n    computed: {\n        readyStep3: function() {\n            return (this.vendor_id !== 'Choose an existing vendor' || this.name.length > 0 && this.phone.length > 0 && this.address.length > 0 && this.bank_account_name.length > 0 && this.bank_account_number.length > 0 && this.bank_name.length > 0);\n        }\n    },\n    methods: {\n        selectVendor: function (type) {\n            this.vendor_id = 'Choose an existing vendor';\n            this.name = '';\n            this.phone = '';\n            this.address = '';\n            this.bank_account_name = '';\n            this.bank_account_number = '';\n            this.bank_name = '';\n            this.vendorType = type;\n        },\n        removeLineItem: function(lineItemId) {\n            console.log('hehehe');\n            var self = this;\n            if(self.canAjax) {\n                self.canAjax = false;\n                $.ajax({\n                    url: '/purchase_orders/remove_line_item/' + lineItemId,\n                    method: 'POST',\n                    data: {},\n                    success: function (data) {\n                        console.log('success');4\n                        window.location='/purchase_orders/submit';\n                    },\n                    error: function (res, status, error) {\n                        console.log(error);\n                        self.canAjax = true;\n                    }\n                });\n            }\n        }\n    }\n});\n\nnew Vue({\n    name: 'allPurchaseOrders',\n    el: '#purchase-orders-all',\n    data: {\n        purchaseOrders: []\n    },\n    ready: function() {\n        var self = this;\n        $.ajax({\n            url: '/api/purchase_orders',\n            method: 'GET',\n            success: function (data) {\n                self.purchaseOrders = data;\n            },\n            error: function(data) {\n                console.log(data);\n            }\n        });\n\n    }\n});","$(document).ready(function () {\n    new Vue({\n        name: 'allPurchaseRequests',\n        el: '#purchase-requests-all',\n        data: {\n            purchaseRequests: [],\n            headings: [\n                ['due', 'Due Date'],\n                ['project.name', 'Project'],\n                ['item', 'Item'],\n                ['specification', 'Specification'],\n                ['quantity', 'Quantity'],\n                ['user.name', 'Made by'],\n                ['created_at', 'Requested']\n            ],\n            field: '',\n            order: '',\n            urgent: '',\n            filter: ''\n        },\n        ready: function () {\n            var self = this;\n            $.ajax({\n                url: '/api/purchase_requests',\n                method: 'GET',\n                success: function (data) {\n                    self.purchaseRequests = data;\n                },\n                error: function (res, status, req) {\n                    console.log(status);\n                }\n            });\n        },\n        methods: {\n            loadSinglePR: function (id) {\n                window.document.location = '/purchase_requests/single/' + id;\n            },\n            changeSort: function ($newField) {\n                if (this.field == $newField) {\n                    this.order = (this.order == '') ? -1 : '';\n                } else {\n                    this.field = $newField;\n                    this.order = ''\n                }\n            },\n            toggleUrgent: function () {\n                this.urgent = (this.urgent) ? '' : 1;\n            },\n            changeFilter: function (filter) {\n                this.filter = filter;\n            },\n            checkShow: function (purchaseRequest) {\n                switch (this.filter) {\n                    case 'complete':\n                        console.log(purchaseRequest.state);\n                        if (purchaseRequest.state == 'Open' && purchaseRequest.quantity == '0') {\n                            return true;\n                        }\n                        break;\n                    case 'cancelled':\n                        if (purchaseRequest.state == 'Cancelled') {\n                            return true;\n                        }\n                        break;\n                    default:\n                        if (purchaseRequest.quantity > 0) {\n                            return true;\n                        }\n                }\n            }\n        }\n    });\n});\n","Vue.filter('date', function (value) {\n    if (value !== '0000-00-00 00:00:00') {\n        return moment(value, \"YYYY-MM-DD HH:mm:ss\").format('DD/MM/YYYY');\n    }\n    return value;\n});\n\nVue.filter('easyDate', function (value) {\n    if (value !== '0000-00-00 00:00:00') {\n        return moment(value, \"YYYY-MM-DD HH:mm:ss\").format('DD MMMM YYYY');\n    }\n    return value;\n});\n\nVue.filter('diffHuman', function (value) {\n    if (value !== '0000-00-00 00:00:00') {\n        return moment(value, \"YYYY-MM-DD HH:mm:ss\").fromNow();\n    }\n    return value;\n});\n\nVue.filter('numberFormat', function (val) {\n    //Seperates the components of the number\n    var n = val.toString().split(\".\");\n    //Comma-fies the first part\n    n[0] = n[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    //Combines the two sections\n    return n.join(\".\");\n});\n\nVue.filter('numberModel', {\n    read: function (val) {\n        //Seperates the components of the number\n        var n = val.toString().split(\".\");\n        //Comma-fies the first part\n        n[0] = n[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n        //Combines the two sections\n        return n.join(\".\");\n    },\n    write: function (val, oldVal) {\n        return val;\n    }\n});\n\nVue.filter('limitString', function (val, limit) {\n    if (val) {\n        var trimmedString = val.substring(0, limit);\n        trimmedString = trimmedString.substr(0, Math.min(trimmedString.length, trimmedString.lastIndexOf(\" \"))) + '...';\n        return trimmedString\n    }\n\n    return val;\n});\n\n\n"],"sourceRoot":"/source/"}